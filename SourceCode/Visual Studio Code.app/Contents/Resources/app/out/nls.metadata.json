{
	"keys": {
		"vs/code/electron-main/main": [
			"newWindow",
			"newWindowDesc",
			"folderDesc"
		],
		"vs/code/node/cliProcessMain": [
			"notFound",
			"notInstalled",
			"useId",
			"successVsixInstall",
			"alreadyInstalled",
			"foundExtension",
			"installing",
			"successInstall",
			"uninstalling",
			"successUninstall"
		],
		"vs/editor/contrib/defineKeybinding/browser/defineKeybinding": [
			"defineKeybinding.start",
			"defineKeybinding.initial",
			"defineKeybinding.kbLayoutInfoMessage",
			"defineKeybinding.kbLayoutErrorMessage",
			"DefineKeybindingAction"
		],
		"vs/editor/contrib/accessibility/browser/accessibility": [
			"introMsg",
			"status",
			"tabFocusModeOnMsg",
			"tabFocusModeOnMsgNoKb",
			"tabFocusModeOffMsg",
			"tabFocusModeOffMsgNoKb",
			"outroMsg",
			"ShowAccessibilityHelpAction"
		],
		"vs/editor/contrib/suggest/electron-browser/snippetCompletion": [
			"snippet.suggestions.label"
		],
		"vs/platform/actions/browser/menusExtensionPoint": [
			"requirearry",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.menuItem.command",
			"vscode.extension.contributes.menuItem.alt",
			"vscode.extension.contributes.menuItem.when",
			"vscode.extension.contributes.menuItem.group",
			"vscode.extension.contributes.menus",
			"menus.editorTitle",
			"menus.editorContext",
			"menus.editorTabContext",
			"menus.explorerContext",
			"nonempty",
			"requirestring",
			"requirestring",
			"optstring",
			"opticon",
			"vscode.extension.contributes.commandType.command",
			"vscode.extension.contributes.commandType.title",
			"vscode.extension.contributes.commandType.category",
			"vscode.extension.contributes.commandType.icon",
			"vscode.extension.contributes.commandType.icon.light",
			"vscode.extension.contributes.commandType.icon.dark",
			"vscode.extension.contributes.commands",
			"dup",
			"menuId.invalid",
			"missing.command",
			"missing.altCommand",
			"dupe.command",
			"nosupport.altCommand"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"toggleStatusbar",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"toggleSidebar",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"toggleLocation",
			"view"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"toggleEditorGroupLayout",
			"horizontalLayout",
			"verticalLayout",
			"view"
		],
		"vs/workbench/browser/actions/openSettings": [
			"fail.createSettings",
			"openGlobalSettings",
			"workspaceHasSettings",
			"openWorkspaceSettings",
			"neverShowAgain",
			"emptySettingsHeader",
			"openGlobalKeybindings",
			"emptyKeybindingsHeader",
			"openWorkspaceSettings",
			"openFolderFirst",
			"emptySettingsHeader1",
			"defaultSettingsHeader",
			"defaultSettingsHeader2",
			"defaultName",
			"defaultKeybindingsHeader",
			"defaultKeybindings",
			"defaultSettingsEditor",
			"preferences"
		],
		"vs/workbench/browser/actions/configureLocale": [
			"configureLocale",
			"displayLanguage",
			"doc",
			"restart",
			"fail.createSettings",
			"JsonSchema.locale"
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"entryAriaLabel",
			"groupLabel",
			"noResultsFoundInGroup",
			"noOpenedEditors",
			"noResultsFound",
			"noOpenedEditorsAllGroups"
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"commandsHandlerDescriptionDefault",
			"gotoLineDescriptionMac",
			"gotoLineDescriptionWin",
			"gotoSymbolDescription",
			"gotoSymbolDescriptionScoped",
			"helpDescription"
		],
		"vs/workbench/parts/files/browser/fileActions.contribution": [
			"filesCategory"
		],
		"vs/workbench/parts/files/browser/files.contribution": [
			"showExplorerViewlet",
			"explore",
			"view",
			"textFileEditor",
			"binaryFileEditor",
			"filesConfigurationTitle",
			"exclude",
			"files.exclude.boolean",
			"files.exclude.when",
			"associations",
			"encoding",
			"eol",
			"trimTrailingWhitespace",
			"autoSave",
			"autoSaveDelay",
			"watcherExclude",
			"formatOnSave",
			"explorerConfigurationTitle",
			{
				"key": "openEditorsVisible",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "dynamicHeight",
				"comment": [
					"Open is an adjective"
				]
			},
			"autoReveal",
			"enableDragAndDrop"
		],
		"vs/workbench/parts/files/electron-browser/files.electron.contribution": [
			"filesCategory"
		],
		"vs/workbench/parts/search/browser/search.contribution": [
			"findInFolder",
			"showTriggerActions",
			"name",
			"showSearchViewlet",
			"view",
			"findInFiles",
			"openAnythingHandlerDescription",
			"openSymbolDescriptionNormal",
			"searchConfigurationTitle",
			"exclude",
			"exclude.boolean",
			"exclude.when",
			"search.quickOpen.includeSymbols"
		],
		"vs/workbench/parts/search/browser/searchViewlet": [
			"moreSearch",
			"searchScope.includes",
			"label.includes",
			"searchScope.excludes",
			"label.excludes",
			"global.searchScope.folders",
			"label.global.excludes",
			"replaceAll.message",
			"removeAll.message",
			"replaceAll.confirmation.title",
			"replaceAll.confirmation.message",
			"removeAll.confirmation.message",
			"replaceAll.confirm.button",
			"treeAriaLabel",
			"globLabel",
			"searchMaxResultsWarning",
			"searchCanceled",
			"noResultsIncludesExcludes",
			"noResultsIncludes",
			"noResultsExcludes",
			"noResultsFound",
			"rerunSearch.message",
			"rerunSearchInAll.message",
			"openSettings.message",
			"ariaSearchResultsStatus"
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"fileAndTypeResults",
			"fileResults"
		],
		"vs/workbench/parts/git/browser/gitQuickOpen": [
			"refAriaLabel",
			"checkoutBranch",
			"checkoutRemoteBranch",
			"checkoutTag",
			"alreadyCheckedOut",
			{
				"key": "branchAriaLabel",
				"comment": [
					"the branch name"
				]
			},
			"createBranch",
			"noBranches",
			"notValidBranchName"
		],
		"vs/workbench/parts/git/browser/gitActions.contribution": [
			"switchToChangesView",
			"openInEditor",
			"workbenchStage",
			"workbenchUnstage",
			"stageSelectedLines",
			"unstageSelectedLines",
			"openChange",
			"openFile",
			"git"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"toggleDebugViewlet",
			"toggleDebugPanel",
			"debug",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugPanel"
			},
			"view",
			"view",
			"debugCategory",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugErrorEditor"
			},
			"debugConfigurationTitle",
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "allowBreakpointsEverywhere"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "openExplorerOnEnd"
			}
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"replAriaLabel",
			"actions.repl.historyPrevious",
			"actions.repl.historyNext",
			{
				"key": "actions.repl.acceptInput",
				"comment": [
					"Apply input from the debug console input box"
				]
			}
		],
		"vs/workbench/parts/debug/browser/debugViewlet": [
			"noWorkspace",
			"pleaseRestartToDebug"
		],
		"vs/workbench/parts/html/browser/html.contribution": [
			"html.editor.label"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"extensionsCommands",
			"galleryExtensionsCommands",
			"extension",
			"extensions",
			"view",
			"extensionsConfigurationTitle",
			"extensionsAutoUpdate"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen": [
			"manage",
			"searchFor",
			"noExtensionsToInstall"
		],
		"vs/workbench/parts/output/browser/output.contribution": [
			"output",
			"viewCategory",
			"viewCategory",
			"clearOutput.label"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"searchExtensions",
			"sort by installs",
			"sort by rating",
			"ascending",
			"descending",
			"no extensions found",
			"suggestProxyError",
			"extensions",
			"outdatedExtensions"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"outputPanelWithInputAriaLabel",
			"outputPanelAriaLabel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.shell.linux",
			"terminal.integrated.shellArgs.linux",
			"terminal.integrated.shell.osx",
			"terminal.integrated.shellArgs.osx",
			"terminal.integrated.shell.windows",
			"terminal.integrated.shellArgs.windows",
			"terminal.integrated.fontFamily",
			"terminal.integrated.fontLigatures",
			"terminal.integrated.fontSize",
			"terminal.integrated.lineHeight",
			"terminal.integrated.cursorBlinking",
			"terminal.integrated.setLocaleVariables",
			"terminal.integrated.commandsToSkipShell",
			"terminal",
			"terminalCategory",
			"viewCategory"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"createNewTerminal",
			"copy",
			"paste"
		],
		"vs/workbench/parts/emmet/node/emmet.contribution": [
			"emmetConfigurationTitle",
			"triggerExpansionOnTab",
			"emmetPreferences",
			"emmetSyntaxProfiles",
			"emmetExclude"
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"AbstractTaskAction.noWorkspace",
			"BuildAction.label",
			"TestAction.label",
			"RebuildAction.label",
			"CleanAction.label",
			"ConfigureTaskRunnerAction.noWorkspace",
			"ConfigureTaskRunnerAction.quickPick.template",
			"ConfigureTaskRunnerAction.autoDetecting",
			"ConfigureTaskRunnerAction.autoDetect",
			"ConfigureTaskRunnerAction.failed",
			"ConfigureTaskRunnerAction.label",
			"ConfigureBuildTaskAction.label",
			"CloseMessageAction.label",
			"TerminateAction.label",
			"TerminateAction.noProcess",
			"TerminateAction.failed",
			"ShowLogAction.label",
			"RunTaskAction.label",
			"problems",
			"manyMarkers",
			"tasks",
			"TaskSystem.invalidTaskJson",
			"TaskSystem.noConfiguration",
			"TaskSystem.noBuildType",
			"TaskSystem.activeSame",
			"TaskSystem.active",
			"TaskSystem.runningTask",
			{
				"key": "TaskSystem.terminateTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TaskSystem.noProcess",
			{
				"key": "TaskSystem.exitAnyways",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TaskSystem.unknownError",
			"tasksCategory",
			"taskCommands",
			"JsonSchema.pattern.regexp",
			"JsonSchema.pattern.file",
			"JsonSchema.pattern.location",
			"JsonSchema.pattern.line",
			"JsonSchema.pattern.column",
			"JsonSchema.pattern.endLine",
			"JsonSchema.pattern.endColumn",
			"JsonSchema.pattern.severity",
			"JsonSchema.pattern.code",
			"JsonSchema.pattern.message",
			"JsonSchema.pattern.loop",
			"JsonSchema.watchingPattern.regexp",
			"JsonSchema.watchingPattern.file",
			"JsonSchema.problemMatcher.base",
			"JsonSchema.problemMatcher.owner",
			"JsonSchema.problemMatcher.severity",
			"JsonSchema.problemMatcher.applyTo",
			"JsonSchema.problemMatcher.pattern",
			"JsonSchema.problemMatcher.fileLocation",
			"JsonSchema.problemMatcher.watching.activeOnStart",
			"JsonSchema.problemMatcher.watching.beginsPattern",
			"JsonSchema.problemMatcher.watching.endsPattern",
			"JsonSchema.problemMatcher.watchedBegin",
			"JsonSchema.problemMatcher.watchedEnd",
			"JsonSchema.command",
			"JsonSchema.shell",
			"JsonSchema.args",
			"JsonSchema.options",
			"JsonSchema.options.cwd",
			"JsonSchema.options.env",
			"JsonSchema.showOutput",
			"JsonSchema.watching",
			"JsonSchema.promptOnClose",
			"JsonSchema.echoCommand",
			"JsonSchema.suppressTaskName",
			"JsonSchema.taskSelector",
			"JsonSchema.matchers",
			"JsonSchema.tasks",
			"JsonSchema.tasks.taskName",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.suppressTaskName",
			"JsonSchema.tasks.showOutput",
			"JsonSchema.echoCommand",
			"JsonSchema.tasks.watching",
			"JsonSchema.tasks.build",
			"JsonSchema.tasks.test",
			"JsonSchema.tasks.matchers",
			"JsonSchema.version",
			"JsonSchema.windows",
			"JsonSchema.mac",
			"JsonSchema.linux"
		],
		"vs/workbench/parts/execution/electron-browser/terminal.contribution": [
			"terminalConfigurationTitle",
			"terminal.external.windowsExec",
			"terminal.external.osxExec",
			"terminal.external.linuxExec",
			"globalConsoleActionWin",
			"globalConsoleActionMacLinux",
			"scopedConsoleActionWin",
			"scopedConsoleActionMacLinux"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"openSnippet.label",
			"openSnippet.pickLanguage",
			"openSnippet.errorOnCreate",
			"preferences",
			"snippetSchema.json.default",
			"snippetSchema.json",
			"snippetSchema.json.prefix",
			"snippetSchema.json.body",
			"snippetSchema.json.description"
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"selectTheme.label",
			"problemChangingTheme",
			"themes.selectTheme",
			"selectIconTheme.label",
			"noIconThemeLabel",
			"noIconThemeDesc",
			"problemChangingIconTheme",
			"themes.selectIconTheme",
			"findMore",
			"preferences"
		],
		"vs/workbench/parts/update/electron-browser/update.contribution": [
			"release notes",
			"updateConfigurationTitle",
			"updateChannel"
		],
		"vs/workbench/parts/nps/electron-browser/nps.contribution": [
			"surveyQuestion",
			"takeSurvey",
			"remindLater",
			"neverAgain"
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"install",
			"exists",
			"editFile",
			"again",
			"continue",
			"cancel",
			"successIn",
			"warnEscalation",
			"ok",
			"cantCreateBinFolder",
			"cancel2",
			"aborted",
			"uninstall",
			"successFrom",
			"update",
			"changeNow",
			"later",
			"laterInfo",
			"shellCommand"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"view",
			"help",
			"developer",
			"file",
			"workbenchConfigurationTitle",
			"showEditorTabs",
			"showIcons",
			"enablePreview",
			"enablePreviewFromQuickOpen",
			"editorOpenPositioning",
			"closeOnFocusLost",
			"openDefaultSettings",
			"sideBarLocation",
			"statusBarVisibility",
			"windowConfigurationTitle",
			"openFilesInNewWindow",
			"reopenFolders",
			"restoreFullscreen",
			"zoomLevel"
		],
		"vs/workbench/electron-browser/main": [
			"loaderError",
			"loaderErrorNative"
		],
		"vs/workbench/parts/watermark/browser/watermark": [
			"watermark.showCommands",
			"watermark.quickOpen",
			"watermark.moveLines",
			"watermark.addCursor",
			{
				"key": "watermark.toggleTerminal",
				"comment": [
					"toggle is a verb here"
				]
			},
			"watermark.unboundCommand"
		],
		"vs/workbench/node/extensionHostMain": [
			"extensionTestError"
		],
		"vs/base/node/processes": [
			"TaskRunner.UNC"
		],
		"vs/platform/environment/node/argv": [
			"gotoValidation",
			"diff",
			"goto",
			"locale",
			"newWindow",
			"performance",
			"reuseWindow",
			"userDataDir",
			"verbose",
			"wait",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"installExtension",
			"uninstallExtension",
			"disableExtensions",
			"disableGPU",
			"version",
			"help",
			"usage",
			"options",
			"paths",
			"optionsUpperCase"
		],
		"vs/code/electron-main/windows": [
			"hiddenMenuBar",
			"ok",
			"pathNotExistTitle",
			"pathNotExistDetail",
			"accessibilityOptionsWindowTitle",
			"reopen",
			"wait",
			"close",
			"appStalled",
			"appStalledDetail",
			"reopen",
			"close",
			"appCrashed",
			"appCrashedDetail"
		],
		"vs/code/electron-main/menus": [
			{
				"key": "mFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mEdit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mGoto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mWindow",
			{
				"key": "mHelp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mAbout",
			"mHide",
			"mHideOthers",
			"mShowAll",
			"miQuit",
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenRecent",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAs",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miAutoSave",
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRevert",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miExit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSettings",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenWorkspaceSettings",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSnippets",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectColorTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectIconTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreferences",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReopenClosedEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miClearItems",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFind",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFindInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplaceInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExplorer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSearch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewGit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleOutput",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleDebugConsole",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleIntegratedTerminal",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMarker",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCommandPalette",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleFullScreen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleMenuBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleSidebar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTogglePanel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleWordWrap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderWhitespace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderControlCharacters",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomIn",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomReset",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBack",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miForward",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusFirstGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusSecondGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusThirdGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoLine",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mMinimize",
			"mClose",
			"mBringToFront",
			{
				"key": "miToggleDevTools",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAccessibilityOptions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReportIssues",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDocumentation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReleaseNotes",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miKeyboardShortcuts",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miIntroductoryVideos",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwitter",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUserVoice",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miLicense",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPrivacyStatement",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAbout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miRestartToUpdate",
			"miCheckingForUpdates",
			"miDownloadUpdate",
			"miDownloadingUpdate",
			"miInstallingUpdate",
			"miCheckForUpdates",
			"aboutDetail",
			"okButton"
		],
		"vs/workbench/parts/git/electron-main/askpassService": [
			"git"
		],
		"vs/platform/request/common/request": [
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyAuthorization"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"invalidManifest",
			"invalidName",
			"invalidPublisher",
			"invalidVersion",
			"restartCode",
			"restartCode",
			"installDependeciesConfirmation",
			"install",
			"doNotInstall",
			"restartCode",
			"uninstallDependeciesConfirmation",
			"uninstallOnly",
			"uninstallAll",
			"cancel",
			"uninstallConfirmation",
			"ok",
			"cancel",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"notExists"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"notFound",
			"noCompatible"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry"
		],
		"vs/platform/message/common/message": [
			"close",
			"later",
			"cancel"
		],
		"vs/base/common/keybinding": [
			"windowsKey",
			"ctrlKey.long",
			"shiftKey.long",
			"altKey.long",
			"cmdKey.long",
			"windowsKey.long",
			"ctrlKey",
			"shiftKey",
			"altKey",
			"cmdKey",
			"windowsKey"
		],
		"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode": [
			"toggle.tabfocusmode"
		],
		"vs/editor/common/config/commonEditorConfig": [
			"editorConfigurationTitle",
			"fontFamily",
			"fontWeight",
			"fontSize",
			"lineHeight",
			"lineNumbers",
			"rulers",
			"wordSeparators",
			"tabSize",
			"tabSize.errorMessage",
			"insertSpaces",
			"insertSpaces.errorMessage",
			"detectIndentation",
			"roundedSelection",
			"scrollBeyondLastLine",
			"wrappingColumn",
			"wordWrap",
			"wrappingIndent",
			"mouseWheelScrollSensitivity",
			"quickSuggestions",
			"quickSuggestionsDelay",
			"parameterHints",
			"autoClosingBrackets",
			"formatOnType",
			"suggestOnTriggerCharacters",
			"acceptSuggestionOnEnter",
			"snippetSuggestions",
			"emptySelectionClipboard",
			"wordBasedSuggestions",
			"suggestFontSize",
			"suggestLineHeight",
			"tabCompletion",
			"selectionHighlight",
			"overviewRulerLanes",
			"cursorBlinking",
			"mouseWheelZoom",
			"cursorStyle",
			"fontLigatures",
			"hideCursorInOverviewRuler",
			"renderWhitespace",
			"renderControlCharacters",
			"renderIndentGuides",
			"renderLineHighlight",
			"codeLens",
			"folding",
			"glyphMargin",
			"useTabStops",
			"trimAutoWhitespace",
			"stablePeek",
			"sideBySide",
			"ignoreTrimWhitespace",
			"selectionClipboard"
		],
		"vs/editor/common/modes/snippetsRegistry": [
			"snippetSuggest.longLabel"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			"actions.clipboard.cutLabel",
			"actions.clipboard.copyLabel",
			"actions.clipboard.pasteLabel"
		],
		"vs/editor/contrib/comment/common/comment": [
			"comment.line",
			"comment.line.add",
			"comment.line.remove",
			"comment.block"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"action.showContextMenu.label"
		],
		"vs/editor/contrib/format/common/formatActions": [
			"formatDocument.label",
			"formatSelection.label"
		],
		"vs/editor/contrib/goToDeclaration/browser/goToDeclaration": [
			"meta.title",
			"actions.goToDecl.label",
			"actions.goToDeclToSide.label",
			"actions.previewDecl.label",
			"multipleResults"
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"title.wo_source",
			"markerAction.next.label",
			"markerAction.previous.label"
		],
		"vs/editor/contrib/hover/browser/hover": [
			"showHover"
		],
		"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace": [
			"InPlaceReplaceAction.previous.label",
			"InPlaceReplaceAction.next.label"
		],
		"vs/editor/contrib/carretOperations/common/carretOperations": [
			"carret.moveLeft",
			"carret.moveRight"
		],
		"vs/editor/contrib/linesOperations/common/linesOperations": [
			"lines.copyUp",
			"lines.copyDown",
			"lines.moveUp",
			"lines.moveDown",
			"lines.sortAscending",
			"lines.sortDescending",
			"lines.trimTrailingWhitespace",
			"lines.delete",
			"lines.indent",
			"lines.outdent",
			"lines.insertBefore",
			"lines.insertAfter"
		],
		"vs/editor/contrib/links/browser/links": [
			"links.navigate.mac",
			"links.navigate",
			"invalid.url",
			"missing.url",
			"label"
		],
		"vs/editor/contrib/multicursor/common/multicursor": [
			"mutlicursor.insertAbove",
			"mutlicursor.insertBelow",
			"mutlicursor.insertAtEndOfEachLineSelected"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"parameterHints.trigger.label"
		],
		"vs/editor/contrib/quickFix/browser/quickFix": [
			"quickFixWithKb",
			"quickFix",
			"quickfix.trigger.label"
		],
		"vs/editor/contrib/referenceSearch/browser/referenceSearch": [
			"meta.titleReference",
			"references.action.label"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"rename.failed",
			"rename.label"
		],
		"vs/editor/contrib/smartSelect/common/smartSelect": [
			"smartSelect.grow",
			"smartSelect.shrink"
		],
		"vs/editor/contrib/smartSelect/common/jumpToBracket": [
			"smartSelect.jumpBracket"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"suggest.trigger.label"
		],
		"vs/editor/contrib/toggleWordWrap/common/toggleWordWrap": [
			"toggle.wordwrap"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"unfoldAction.label",
			"unFoldRecursivelyAction.label",
			"foldAction.label",
			"foldRecursivelyAction.label",
			"foldAllAction.label",
			"unfoldAllAction.label",
			"foldLevel1Action.label",
			"foldLevel2Action.label",
			"foldLevel3Action.label",
			"foldLevel4Action.label",
			"foldLevel5Action.label"
		],
		"vs/editor/contrib/indentation/common/indentation": [
			"indentationToSpaces",
			"indentationToTabs",
			"configuredTabSize",
			{
				"key": "selectTabWidth",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"indentUsingTabs",
			"indentUsingSpaces",
			"detectIndentation",
			"toggleRenderWhitespace",
			"toggleRenderControlCharacters"
		],
		"vs/platform/extensions/common/extensionsRegistry": [
			"vscode.extension.engines.vscode",
			"vscode.extension.publisher",
			"vscode.extension.displayName",
			"vscode.extension.categories",
			"vscode.extension.galleryBanner",
			"vscode.extension.galleryBanner.color",
			"vscode.extension.galleryBanner.theme",
			"vscode.extension.contributes",
			"vscode.extension.preview",
			"vscode.extension.activationEvents",
			"vscode.extension.badges",
			"vscode.extension.badges.url",
			"vscode.extension.badges.href",
			"vscode.extension.badges.description",
			"vscode.extension.extensionDependencies",
			"vscode.extension.scripts.prepublish",
			"vscode.extension.icon"
		],
		"vs/workbench/browser/parts/editor/stringEditor": [
			"textEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"untitledFileEditorWithInputAriaLabel",
			"untitledFileEditorAriaLabel"
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"quickOpenAriaLabelEntry",
			"quickOpenAriaLabel"
		],
		"vs/workbench/browser/quickopen": [
			"noResultsMatching",
			"noResultsFound2",
			"entryAriaLabel",
			"noCommands"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"gotoSymbol",
			"symbols",
			"method",
			"function",
			"_constructor",
			"variable",
			"class",
			"interface",
			"namespace",
			"package",
			"modules",
			"property",
			"enum",
			"string",
			"rule",
			"file",
			"array",
			"number",
			"boolean",
			"object",
			"key",
			"entryAriaLabel",
			"noSymbolsMatching",
			"noSymbolsFound",
			"gotoSymbolHandlerAriaLabel",
			"cannotRunGotoSymbolInFile",
			"cannotRunGotoSymbol"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"showTriggerActions",
			"entryAriaLabelWithKey",
			"entryAriaLabel",
			"canNotRun",
			"actionNotEnabled",
			"actionNotEnabled",
			"",
			"commandLabel",
			"noCommandsMatching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"gotoLine",
			"gotoLineLabelEmptyWithLimit",
			"gotoLineLabelEmpty",
			"gotoLineColumnLabel",
			"gotoLineLabel",
			"gotoLineHandlerAriaLabel",
			"cannotRunGotoLine"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"entryAriaLabel",
			"globalCommands",
			"editorCommands"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			{
				"key": "titleLabel",
				"comment": [
					"action title",
					"action keybinding"
				]
			}
		],
		"vs/workbench/parts/files/browser/saveErrorHandler": [
			"discard",
			"overwrite",
			"retry",
			"readonlySaveError",
			"genericSaveError",
			"staleSaveError",
			"compareChanges",
			"saveConflictDiffLabel",
			"resolveSaveConflict",
			"userGuide",
			"acceptLocalChanges",
			"conflictingFileHasChanged",
			"revertLocalChanges"
		],
		"vs/workbench/parts/files/browser/fileActions": [
			"retry",
			"rename",
			"rename",
			"dirtyMessageFolderOne",
			"dirtyMessageFolder",
			"dirtyMessageFile",
			"dirtyWarning",
			{
				"key": "renameLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"newFile",
			"newFolder",
			"openFolderFirst",
			"newUntitledFile",
			"newFile",
			"newFolder",
			"createNewFile",
			"createNewFolder",
			"deleteButtonLabelRecycleBin",
			{
				"key": "deleteButtonLabelTrash",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "deleteButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"dirtyMessageFolderOneDelete",
			"dirtyMessageFolderDelete",
			"dirtyMessageFileDelete",
			"dirtyWarning",
			"confirmMoveTrashMessageFolder",
			"confirmMoveTrashMessageFile",
			"undoBin",
			"undoTrash",
			"confirmDeleteMessageFolder",
			"confirmDeleteMessageFile",
			"irreversible",
			"permDelete",
			"delete",
			"importFiles",
			"confirmOverwrite",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"copyFile",
			"pasteFile",
			"duplicateFile",
			"openToSide",
			"compareSource",
			"globalCompareFile",
			"pickHistory",
			"unableToFileToCompare",
			"openFileToCompare",
			"compareWith",
			"compareFiles",
			"refresh",
			"save",
			"saveAs",
			"saveAll",
			"saveAllInGroup",
			"saveFiles",
			"revert",
			{
				"key": "focusOpenEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			"focusFilesExplorer",
			"showInExplorer",
			"openFileToShow",
			"collapseExplorerFolders",
			"refreshExplorer",
			"emptyFileNameError",
			"fileNameExistsError",
			"invalidFileNameError",
			"filePathTooLongError"
		],
		"vs/workbench/browser/viewlet": [
			"collapse",
			"viewToolbarAriaLabel",
			"viewToolbarAriaLabel"
		],
		"vs/workbench/parts/files/browser/views/emptyView": [
			"explorerSection",
			"noWorkspace",
			"noWorkspaceHelp",
			"openFolder"
		],
		"vs/workbench/parts/files/browser/views/explorerViewer": [
			"fileInputAriaLabel",
			"filesExplorerViewerAriaLabel",
			"dirtyMessageFolderOne",
			"dirtyMessageFolder",
			"dirtyMessageFile",
			"dirtyWarning",
			{
				"key": "moveLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmOverwriteMessage",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/workbench/parts/files/browser/views/explorerView": [
			"explorerSection",
			"treeAriaLabel"
		],
		"vs/workbench/parts/files/browser/views/openEditorsView": [
			{
				"key": "openEditosrSection",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "openEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "treeAriaLabel",
				"comment": [
					"Open is an adjective"
				]
			},
			"dirtyCounter"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"vscode.extension.contributes.configuration",
			"vscode.extension.contributes.configuration.title",
			"vscode.extension.contributes.configuration.properties",
			"invalid.type",
			"invalid.title",
			"invalid.properties"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"textFileEditor",
			"createFile",
			"fileEditorWithInputAriaLabel",
			"fileEditorAriaLabel"
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"binaryFileEditor"
		],
		"vs/workbench/parts/files/electron-browser/dirtyFilesTracker": [
			"dirtyFiles"
		],
		"vs/workbench/parts/files/electron-browser/electronFileActions": [
			"revealInWindows",
			"revealInMac",
			"openContainer",
			"revealActiveFileInWindows",
			"revealActiveFileInMac",
			"openActiveFileContainer",
			"openFileToReveal",
			"copyPath",
			"copyPathOfActive",
			"openFileToCopy",
			"openFile",
			"openFolder",
			"openFileFolder",
			"openFileInNewWindow",
			"openFileToShow"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"nextSearchTerm",
			"previousSearchTerm",
			"focusNextInputBox",
			"focusPreviousInputBox",
			"replaceInFiles",
			"findInFolder",
			"RefreshAction.label",
			"ClearSearchResultsAction.label",
			"RemoveAction.label",
			"file.replaceAll.label",
			"match.replace.label",
			"ConfigureGlobalExclusionsAction.label"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"search.action.replaceAll.disabled.label",
			"search.action.replaceAll.enabled.label",
			"search.replace.toggle.button.title",
			"label.Search",
			"search.placeHolder",
			"label.Replace",
			"search.replace.placeHolder",
			"regexp.validationFailure"
		],
		"vs/base/browser/ui/aria/aria": [
			"repeated"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"regexDescription",
			"wordsDescription",
			"caseDescription",
			"defaultLabel"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"defaultLabel",
			"patternDescription",
			"patternHelpInclude"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"searchMatches",
			"searchMatch",
			"fileMatchAriaLabel",
			"replacePreviewResultAria",
			"searchResultAria"
		],
		"vs/base/common/severity": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/workbench/parts/git/browser/gitWorkbenchContributions": [
			"gitProgressBadge",
			"gitPendingChangesBadge",
			"toggleGitViewlet",
			"git",
			"git",
			"view",
			"gitCommands",
			"gitConfigurationTitle",
			"gitEnabled",
			"gitPath",
			"gitAutoRefresh",
			"gitAutoFetch",
			"gitLongCommit",
			"gitLargeRepos",
			"confirmSync",
			"countBadge"
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"entryAriaLabel",
			"searchResults"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"entryAriaLabel",
			"symbols",
			"noSymbolsMatching",
			"noSymbolsWithoutInput"
		],
		"vs/workbench/parts/git/browser/views/empty/emptyView": [
			"noGit",
			"gitinit"
		],
		"vs/workbench/parts/git/browser/views/changes/changesView": [
			"needMessage",
			"nothingToCommit",
			"longCommit",
			"commitMessage",
			"commitMessageAriaLabel",
			"treeAriaLabel",
			"showOutput"
		],
		"vs/workbench/parts/git/browser/views/gitless/gitlessView": [
			"macInstallWith",
			"winInstallWith",
			"linuxDownloadFrom",
			"downloadFrom",
			"looksLike",
			"pleaseRestart"
		],
		"vs/workbench/parts/git/browser/views/notroot/notrootView": [
			"wrongRoot",
			"pleaseRestart"
		],
		"vs/workbench/parts/git/browser/views/disabled/disabledView": [
			"disabled"
		],
		"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView": [
			"noWorkspace",
			"pleaseRestart"
		],
		"vs/workbench/parts/git/browser/views/huge/hugeView": [
			"huge",
			"setting",
			"allo"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"textDiffEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"editableEditorWithInputAriaLabel",
			"editableEditorAriaLabel",
			"inlineDiffLabel",
			"sideBySideDiffLabel",
			"navigate.next.label",
			"navigate.prev.label"
		],
		"vs/workbench/parts/git/browser/gitActions": [
			"openChange",
			"openFile",
			"init",
			"refresh",
			"stageChanges",
			"stageAllChanges",
			"confirmUndoMessage",
			"confirmUndoAllOne",
			"confirmUndoAllMultiple",
			{
				"key": "cleanChangesLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmUndo",
			"irreversible",
			{
				"key": "cleanChangesLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"undoChanges",
			"undoAllChanges",
			"unstage",
			"unstageAllChanges",
			"dirtyTreeCheckout",
			"commitStaged",
			"commitStagedSignedOff",
			"commit",
			"commitMessage",
			"commitAll",
			"commitAllSignedOff",
			"commitAll2",
			"commitStaged2",
			"dirtyTreePull",
			"authFailed",
			"authFailed",
			"pushToRemote",
			"pushToRemotePickMessage",
			"authFailed",
			"publish",
			"confirmPublishMessage",
			{
				"key": "confirmPublishMessageButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"publishPickMessage",
			"authFailed",
			"sync is unpredictable",
			"do you want to continue",
			"ok",
			"cancel",
			"never again",
			"authFailed",
			"undoLastCommit"
		],
		"vs/workbench/parts/debug/electron-browser/debugViews": [
			"variablesSection",
			"variables",
			"variablesAriaTreeLabel",
			"expressionsSection",
			"watch",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "watchAriaTreeLabel"
			},
			"callstackSection",
			"debugStopped",
			"callStack",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "callStackAriaLabel"
			},
			"breakpointsSection",
			"breakpoints",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "breakpointsAriaTreeLabel"
			}
		],
		"vs/workbench/parts/debug/browser/debugEditorModelManager": [
			"breakpointHover",
			"breakpointDisabledHover",
			"breakpointUnverifieddHover",
			"breakpointDirtydHover",
			"breakpointUnsupported"
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"debuggingStarted",
			"debuggingPaused",
			"debuggingStopped",
			"breakpointAdded",
			"breakpointRemoved",
			"NewLaunchConfig",
			"debugTypeNotSupported",
			"debugTypeMissing",
			"preLaunchTaskErrors",
			"preLaunchTaskError",
			"preLaunchTaskExitCode",
			"debugAnyway",
			"debugAdapterCrash",
			"DebugTaskNotFound",
			"differentTaskRunning",
			"debugSourceNotAvailable"
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"addBreakpoint"
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"stateCapture",
			"fileLinkMac",
			"fileLink",
			"replVariableAriaLabel",
			"replExpressionAriaLabel",
			"replValueOutputAriaLabel",
			"replKeyValueOutputAriaLabel"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"openLaunchJson",
			"launchJsonNeedsConfigurtion",
			"selectConfig",
			"startDebug",
			"restartDebug",
			"reconnectDebug",
			"stepOverDebug",
			"stepIntoDebug",
			"stepOutDebug",
			"stepBackDebug",
			"stopDebug",
			"disconnectDebug",
			"continueDebug",
			"pauseDebug",
			"restartFrame",
			"removeBreakpoint",
			"removeAllBreakpoints",
			"toggleEnablement",
			"enableAllBreakpoints",
			"disableAllBreakpoints",
			"activateBreakpoints",
			"deactivateBreakpoints",
			"reapplyAllBreakpoints",
			"addFunctionBreakpoint",
			"renameFunctionBreakpoint",
			"addConditionalBreakpoint",
			"editConditionalBreakpoint",
			"toggleBreakpointAction",
			"conditionalBreakpointEditorAction",
			"setValue",
			"runToCursor",
			"addWatchExpression",
			"debugEvaluate",
			"debugAddToWatch",
			"showDebugHover",
			"addToWatchExpressions",
			"editWatchExpression",
			"removeWatchExpression",
			"removeAllWatchExpressions",
			"clearRepl",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugConsoleAction"
			},
			"unreadOutput",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusConsole"
			},
			"startWithoutDebugging"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"noConfigurations"
		],
		"vs/workbench/parts/markers/browser/markersWorkbenchContributions": [
			{
				"comment": [
					"Argument represents count (number) of errors and warnings."
				],
				"key": "errorsAndWarnings"
			}
		],
		"vs/workbench/parts/markers/electron-browser/markersElectronContributions": [
			"copyMarker"
		],
		"vs/workbench/parts/html/browser/htmlPreviewPart": [
			"html.voidInput"
		],
		"vs/workbench/parts/markers/common/messages": [
			"viewCategory",
			"problems.view.show.label",
			"problems.panel.configuration.title",
			"problems.panel.configuration.autoreveal",
			"markers.panel.title.problems",
			"markers.panel.aria.label.problems.tree",
			"markers.panel.no.problems.build",
			"markers.panel.no.problems.filters",
			"markers.panel.action.filter",
			"markers.panel.filter.placeholder",
			"markers.panel.filter.errors",
			"markers.panel.filter.warnings",
			"markers.panel.filter.infos",
			"markers.panel.single.error.label",
			"markers.panel.multiple.errors.label",
			"markers.panel.single.warning.label",
			"markers.panel.multiple.warnings.label",
			"markers.panel.single.info.label",
			"markers.panel.multiple.infos.label",
			"markers.panel.single.unknown.label",
			"markers.panel.multiple.unknowns.label",
			"markers.panel.at.ln.col.number",
			"problems.tree.aria.label.resource",
			"problems.tree.aria.label.error.marker",
			"problems.tree.aria.label.error.marker.nosource",
			"problems.tree.aria.label.warning.marker",
			"problems.tree.aria.label.warning.marker.nosource",
			"problems.tree.aria.label.info.marker",
			"problems.tree.aria.label.info.marker.nosource",
			"problems.tree.aria.label.marker",
			"problems.tree.aria.label.marker.nosource",
			"errors.warnings.show.label"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"reallyRecommended",
			"showRecommendations",
			"neverShowAgain",
			"close",
			"workspaceRecommended",
			"showRecommendations",
			"neverShowAgain",
			"close"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsInput": [
			"extensionsInputName"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsWorkbenchService": [
			"successSingle",
			"reloadNow"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsFileTemplate": [
			"app.extensions.json.title",
			"app.extensions.json.recommendations",
			"app.extension.identifier.errorMessage"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionEditor": [
			"name",
			"extension id",
			"publisher",
			"install count",
			"rating",
			"license",
			"details",
			"contributions",
			"changelog",
			"dependencies",
			"noReadme",
			"noChangelog",
			"noContributions",
			"noDependencies",
			"settings",
			"setting name",
			"description",
			"default",
			"debuggers",
			"debugger name",
			"themes",
			"JSON Validation",
			"commands",
			"command name",
			"description",
			"keyboard shortcuts",
			"menuContexts",
			"languages",
			"language id",
			"language name",
			"file extensions",
			"grammar",
			"snippets"
		],
		"vs/editor/common/modes/modesRegistry": [
			"plainText.alias"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"installAction",
			"installing",
			"uninstallAction",
			"Uninstalling",
			"updateAction",
			"enableForWorkspaceAction.label",
			"enableAlwaysAction.label",
			"disableForWorkspaceAction.label",
			"disableAlwaysAction.label",
			"enableForWorkspaceAction",
			"enableGloballyAction",
			"enableAction",
			"disableForWorkspaceAction",
			"disableGloballyAction",
			"disableAction",
			"reloadAction",
			"reloadNow",
			"postInstallTooltip",
			"postInstallMessage",
			"postEnableTooltip",
			"postEnableMessage",
			"postDisableTooltip",
			"postDisableMessage",
			"postUninstallTooltip",
			"postUninstallMessage",
			"updateAll",
			"toggleExtensionsViewlet",
			"installExtensions",
			"showInstalledExtensions",
			"showDisabledExtensions",
			"clearExtensionsInput",
			"showOutdatedExtensions",
			"showPopularExtensions",
			"showRecommendedExtensions",
			"showWorkspaceRecommendedExtensions",
			"openExtensionsFolder",
			"configureWorkspaceRecommendedExtensions",
			"ConfigureWorkspaceRecommendations.noWorkspace",
			"OpenExtensionsFile.failed",
			"installVSIX",
			"builtin",
			"disableAll",
			"disableAllWorkspace",
			"enableAll",
			"enableAllWorkspace"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"toggleOutput",
			"clearOutput",
			"switchToOutput.label"
		],
		"vs/workbench/parts/output/browser/outputEditorInput": [
			"output",
			"outputChannel"
		],
		"vs/workbench/browser/parts/quickopen/quickopen.contribution": [
			"quickOpen",
			"quickNavigateNext",
			"quickNavigatePrevious"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"workbench.action.terminal.toggleTerminal",
			"workbench.action.terminal.kill",
			"workbench.action.terminal.kill.short",
			"workbench.action.terminal.copySelection",
			"workbench.action.terminal.new",
			"workbench.action.terminal.new.short",
			"workbench.action.terminal.focus",
			"workbench.action.terminal.focusNext",
			"workbench.action.terminal.focusPrevious",
			"workbench.action.terminal.paste",
			"workbench.action.terminal.runSelectedText",
			"workbench.action.terminal.switchTerminalInstance",
			"workbench.action.terminal.scrollDown",
			"workbench.action.terminal.scrollDownPage",
			"workbench.action.terminal.scrollToBottom",
			"workbench.action.terminal.scrollUp",
			"workbench.action.terminal.scrollUpPage",
			"workbench.action.terminal.scrollToTop",
			"workbench.action.terminal.clear"
		],
		"vs/base/common/errorMessage": [
			{
				"key": "message",
				"comment": [
					"{0} represents the error message",
					"{1} represents the error code"
				]
			},
			{
				"key": "error.permission.verbose",
				"comment": [
					"{0} represents detailed information why the permission got denied"
				]
			},
			"error.permission",
			"error.http.verbose",
			"error.http",
			"error.connection.unknown.verbose",
			"error.connection.unknown",
			"stackTrace.format",
			"error.defaultMessage",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/workbench/services/history/browser/history": [
			"patchedWindowTitle",
			"devExtensionWindowTitle",
			"prefixDecoration",
			"prefixWorkspaceTitleMac",
			"prefixWorkspaceTitle",
			"workspaceTitle",
			"prefixTitle"
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"activityBarAriaLabel"
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"focusSideBar",
			"viewCategory"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"closePanel",
			"togglePanel",
			"focusPanel",
			"toggleMaximizedPanel",
			"view",
			"view",
			"view"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"canNotRun"
		],
		"vs/workbench/common/editor/diffEditorInput": [
			"compareLabels"
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"groupOneVertical",
			"groupTwoVertical",
			"groupThreeVertical",
			"groupOneHorizontal",
			"groupTwoHorizontal",
			"groupThreeHorizontal",
			"editorOpenError"
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"nonempty",
			"requirestring",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.keybindings.command",
			"vscode.extension.contributes.keybindings.key",
			"vscode.extension.contributes.keybindings.mac",
			"vscode.extension.contributes.keybindings.linux",
			"vscode.extension.contributes.keybindings.win",
			"vscode.extension.contributes.keybindings.when",
			"vscode.extension.contributes.keybindings",
			"invalid.keybindings",
			"keybindings.json.title",
			"keybindings.json.key",
			"keybindings.json.command",
			"keybindings.json.when"
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"errorUnknownKey",
			"errorInvalidTarget",
			"errorNoWorkspaceOpened",
			"errorInvalidConfiguration",
			"errorInvalidConfigurationWorkspace",
			"errorConfigurationFileDirty",
			"errorConfigurationFileDirtyWorkspace"
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"inputModeEntryDescription",
			"inputModeEntry",
			"emptyPicks",
			"quickOpenInput",
			"historyMatches",
			"historyMatches",
			"noResultsFound1",
			"canNotRunPlaceholder",
			"entryAriaLabel",
			"removeFromEditorHistory",
			"pickHistory"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"netVersionError",
			"installNet",
			"neverShowAgain",
			"trashFailed"
		],
		"vs/workbench/services/configurationResolver/node/configurationResolverService": [
			"interactiveVariableNotFound"
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"saveChangesMessage",
			"saveChangesMessages",
			"moreFile",
			"moreFiles",
			{
				"key": "saveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "dontSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancel",
			"saveChangesDetail",
			"allFiles",
			"noExt"
		],
		"vs/workbench/parts/emmet/node/actions/expandAbbreviation": [
			"expandAbbreviationAction"
		],
		"vs/workbench/parts/emmet/node/actions/balance": [
			"balanceInward",
			"balanceOutward"
		],
		"vs/workbench/parts/emmet/node/actions/matchingPair": [
			"matchingPair"
		],
		"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation": [
			"wrapWithAbbreviationAction",
			"enterAbbreviation",
			"abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/editPoints": [
			"previousEditPoint",
			"nextEditPoint"
		],
		"vs/workbench/parts/emmet/node/actions/selectItem": [
			"selectPreviousItem",
			"selectNextItem"
		],
		"vs/workbench/parts/emmet/node/actions/splitJoinTag": [
			"splitJoinTag"
		],
		"vs/workbench/parts/emmet/node/actions/toggleComment": [
			"toggleComment"
		],
		"vs/workbench/parts/emmet/node/actions/removeTag": [
			"removeTag"
		],
		"vs/workbench/parts/emmet/node/actions/mergeLines": [
			"mergeLines"
		],
		"vs/workbench/parts/emmet/node/actions/updateImageSize": [
			"updateImageSize"
		],
		"vs/workbench/parts/emmet/node/actions/evaluateMath": [
			"evaluateMathExpression"
		],
		"vs/workbench/parts/emmet/node/actions/incrementDecrement": [
			"incrementNumberByOneTenth",
			"incrementNumberByOne",
			"incrementNumberByTen",
			"decrementNumberByOneTenth",
			"decrementNumberByOne",
			"decrementNumberByTen"
		],
		"vs/workbench/parts/emmet/node/actions/reflectCssValue": [
			"reflectCSSValue"
		],
		"vs/workbench/parts/emmet/node/actions/updateTag": [
			"updateTag",
			"enterTag",
			"tag"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed"
		],
		"vs/base/common/processes": [
			"ExecutableParser.commandMissing",
			"ExecutableParser.isShellCommand",
			"ExecutableParser.args",
			"ExecutableParser.invalidCWD"
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"tsc.config",
			"tsc.watch",
			"dotnetCore",
			"msbuild",
			"externalCommand",
			"Maven"
		],
		"vs/workbench/parts/tasks/node/processRunnerSystem": [
			"TaskRunnerSystem.noBuildTask",
			"TaskRunnerSystem.noTestTask",
			"TaskRunnerSystem.fatalError",
			"TaskRunnerSystem.norebuild",
			"TaskRunnerSystem.unknownError",
			"TaskRunnerSystem.watchingBuildTaskFinished",
			"TaskRunnerSystem.childProcessError",
			"TaskRunnerSystem.cancelRequested"
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"TaskSystemDetector.noGulpTasks",
			"TaskSystemDetector.noJakeTasks",
			"TaskSystemDetector.noGulpProgram",
			"TaskSystemDetector.noJakeProgram",
			"TaskSystemDetector.noGruntProgram",
			"TaskSystemDetector.noProgram",
			"TaskSystemDetector.buildTaskDetected",
			"TaskSystemDetector.testTaskDetected"
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"entryAriaLabel",
			"tasksAriaLabel",
			"noTasksMatching",
			"noTasksFound"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsTracker": [
			"userSnippet"
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"updateNow",
			"later",
			"releaseNotes",
			"releaseNotes",
			"showReleaseNotes",
			"downloadNow",
			"read the release notes",
			"licenseChanged",
			"license",
			"insiderBuilds",
			"readmore",
			"neverShowAgain",
			"updateAvailable",
			"thereIsUpdateAvailable",
			"noUpdatesAvailable"
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesInput": [
			"releaseNotesInputName"
		],
		"vs/workbench/api/node/mainThreadMessageService": [
			"close"
		],
		"vs/editor/node/textMate/TMSnippets": [
			"vscode.extension.contributes.snippets",
			"vscode.extension.contributes.snippets-language",
			"vscode.extension.contributes.snippets-path",
			"invalid.language",
			"invalid.path.0",
			"invalid.path.1"
		],
		"vs/platform/jsonschemas/common/jsonValidationExtensionPoint": [
			"contributes.jsonValidation",
			"contributes.jsonValidation.fileMatch",
			"contributes.jsonValidation.url",
			"invalid.jsonValidation",
			"invalid.fileMatch",
			"invalid.url",
			"invalid.url.fileschema",
			"invalid.url.schema"
		],
		"vs/editor/node/textMate/TMSyntax": [
			"vscode.extension.contributes.grammars",
			"vscode.extension.contributes.grammars.language",
			"vscode.extension.contributes.grammars.scopeName",
			"vscode.extension.contributes.grammars.path",
			"vscode.extension.contributes.grammars.embeddedLanguages",
			"vscode.extension.contributes.grammars.injectTo",
			"invalid.language",
			"invalid.scopeName",
			"invalid.path.0",
			"invalid.injectTo",
			"invalid.embeddedLanguages",
			"invalid.path.1"
		],
		"vs/editor/node/languageConfiguration": [
			"parseErrors",
			"schema.openBracket",
			"schema.closeBracket",
			"schema.comments",
			"schema.blockComments",
			"schema.blockComment.begin",
			"schema.blockComment.end",
			"schema.lineComment",
			"schema.brackets",
			"schema.autoClosingPairs",
			"schema.autoClosingPairs.notIn",
			"schema.surroundingPairs"
		],
		"vs/workbench/electron-browser/actions": [
			"closeActiveEditor",
			"closeWindow",
			"switchWindow",
			"current",
			"switchWindowPlaceHolder",
			"closeFolder",
			"noFolderOpened",
			"newWindow",
			"toggleFullScreen",
			"toggleMenuBar",
			"toggleDevTools",
			"zoomIn",
			"zoomOut",
			"zoomReset",
			"appPerf",
			"reloadWindow",
			"openRecent",
			"folders",
			"files",
			"openRecentPlaceHolderMac",
			"openRecentPlaceHolder",
			"closeMessages",
			"reportIssues",
			"diffLeftRightLabel"
		],
		"vs/workbench/electron-browser/shell": [
			"runningAsRoot",
			"sharedProcessCrashed"
		],
		"vs/editor/common/model/textModelWithTokens": [
			"mode.tokenizationSupportFailed"
		],
		"vs/workbench/parts/git/node/git.lib": [
			"errorBuffer",
			"fileBinaryError"
		],
		"vs/base/node/zip": [
			"notFound"
		],
		"vs/platform/extensions/node/extensionValidator": [
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch",
			"extensionDescription.empty",
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.main3",
			"notSemver"
		],
		"vs/base/common/json": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		],
		"vs/editor/common/config/defaultConfig": [
			"editorViewAccessibleLabel"
		],
		"vs/editor/contrib/find/common/findController": [
			"startFindAction",
			"findNextMatchAction",
			"findPreviousMatchAction",
			"nextSelectionMatchFindAction",
			"previousSelectionMatchFindAction",
			"startReplace",
			"addSelectionToNextFindMatch",
			"addSelectionToPreviousFindMatch",
			"moveSelectionToNextFindMatch",
			"moveSelectionToPreviousFindMatch",
			"selectAllOccurencesOfFindMatch",
			"changeAll.label"
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"label.find",
			"placeholder.find",
			"label.previousMatchButton",
			"label.nextMatchButton",
			"label.toggleSelectionFind",
			"label.closeButton",
			"label.replace",
			"placeholder.replace",
			"label.replaceButton",
			"label.replaceAllButton",
			"label.toggleReplaceButton",
			"title.matchesCountLimit",
			"label.matchesLocation",
			"label.noResults"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesController": [
			"labelLoading"
		],
		"vs/editor/contrib/zoneWidget/browser/peekViewWidget": [
			"label.close"
		],
		"vs/editor/contrib/hover/browser/modesContentHover": [
			"modesContentHover.loading"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"hint"
		],
		"vs/editor/common/services/bulkEdit": [
			"conflict"
		],
		"vs/editor/contrib/rename/browser/renameInputField": [
			"renameAriaLabel"
		],
		"vs/editor/contrib/rename/common/rename": [
			"no result"
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"readMore",
			"suggestionWithDetailsAriaLabel",
			"suggestionAriaLabel",
			"goback",
			"suggestWidget.loading",
			"suggestWidget.noSuggestions",
			"suggestionAriaAccepted",
			"ariaCurrentSuggestionWithDetails",
			"ariaCurrentSuggestion"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"collapse"
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"saveFileFirst",
			"genericSaveError"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"more"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"titleAndKb"
		],
		"vs/workbench/parts/files/browser/views/openEditorsViewer": [
			"editorGroupAriaLabel",
			"openEditorAriaLabel",
			"saveAll",
			"closeAll",
			"close",
			"closeOthers",
			"closeAll"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"splitEditor",
			"navigateEditorGroups",
			"focusActiveEditorGroup",
			"focusFirstEditorGroup",
			"focusSecondEditorGroup",
			"focusThirdEditorGroup",
			"focusPreviousGroup",
			"focusNextGroup",
			"openToSide",
			"closeEditor",
			"closeEditorsToTheLeft",
			"closeEditorsToTheRight",
			"closeAllEditors",
			"closeEditorsInOtherGroups",
			"closeOtherEditorsInGroup",
			"closeEditorsInGroup",
			"moveActiveGroupLeft",
			"moveActiveGroupRight",
			"minimizeOtherEditorGroups",
			"evenEditorGroups",
			"maximizeEditor",
			"keepEditor",
			"openNextEditor",
			"openPreviousEditor",
			"navigateNext",
			"navigatePrevious",
			"reopenClosedEditor",
			"showEditorsInFirstGroup",
			"showEditorsInSecondGroup",
			"showEditorsInThirdGroup",
			"showEditorsInGroup",
			"showAllEditors",
			"openPreviousEditorInGroup",
			"openNextEditorInGroup",
			"navigateEditorHistoryByInput",
			"clearEditorHistory",
			"focusLastEditorInStack",
			"moveEditorLeft",
			"moveEditorRight",
			"moveEditorToPreviousGroup",
			"moveEditorToNextGroup"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"binaryEditor"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"fileReplaceChanges"
		],
		"vs/workbench/parts/git/browser/gitServices": [
			"cantOpen",
			"gitIndexChanges",
			"gitIndexChangesDesc",
			"gitIndexChangesRenamed",
			"gitIndexChangesRenamedDesc",
			"workingTreeChanges",
			"workingTreeChangesDesc",
			"gitMergeChanges",
			"gitMergeChangesDesc",
			"updateGit",
			"download",
			"neverShowAgain",
			"configureUsernameEmail",
			"badConfigFile",
			"unmergedChanges",
			"showOutput",
			"cancel",
			"checkNativeConsole",
			"changesFromIndex",
			"changesFromIndexDesc",
			"changesFromTree",
			"changesFromTreeDesc",
			"cantOpenResource"
		],
		"vs/workbench/parts/git/browser/gitWidgets": [
			"publishBranch",
			"syncBranch",
			"gitNotEnabled"
		],
		"vs/workbench/parts/git/browser/views/changes/changesViewer": [
			"stagedChanges",
			"allChanges",
			"mergeChanges",
			"outsideOfWorkspace",
			"modified-char",
			"modified-char",
			"added-char",
			"deleted-char",
			"deleted-char",
			"renamed-char",
			"copied-char",
			"untracked-char",
			"ignored-char",
			"deleted-char",
			"added-char",
			"deleted-char",
			"added-char",
			"deleted-char",
			"added-char",
			"modified-char",
			"title-index-modified",
			"title-modified",
			"title-index-added",
			"title-index-deleted",
			"title-deleted",
			"title-index-renamed",
			"title-index-copied",
			"title-untracked",
			"title-ignored",
			"title-conflict-both-deleted",
			"title-conflict-added-by-us",
			"title-conflict-deleted-by-them",
			"title-conflict-added-by-them",
			"title-conflict-deleted-by-us",
			"title-conflict-both-added",
			"title-conflict-both-modified",
			"fileStatusAriaLabel",
			"ariaLabelStagedChanges",
			"ariaLabelChanges",
			"ariaLabelMerge"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"unknownSource",
			"startDebugFirst",
			"unknownStack",
			"snapshotObj"
		],
		"vs/workbench/parts/debug/electron-browser/debugViewer": [
			"process",
			"thread",
			"paused",
			{
				"key": "running",
				"comment": [
					"indicates state"
				]
			},
			"loadMoreStackFrames",
			"threadAriaLabel",
			"stackFrameAriaLabel",
			"variableValueAriaLabel",
			"variableScopeAriaLabel",
			"variableAriaLabel",
			"watchExpressionPlaceholder",
			"watchExpressionInputAriaLabel",
			"watchExpressionAriaLabel",
			"watchVariableAriaLabel",
			"functionBreakpointPlaceholder",
			"functionBreakPointInputAriaLabel",
			"functionBreakpointsNotSupported",
			"breakpointAriaLabel",
			"functionBreakpointAriaLabel",
			"exceptionBreakpointAriaLabel"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"moreInfo",
			"noDebugAdapterExtensionInstalled",
			"unableToLaunchDebugAdapter",
			"debugAdapterBinNotFound",
			"stoppingDebugAdapter",
			"debugAdapterCrash"
		],
		"vs/workbench/parts/debug/node/debugConfigurationManager": [
			"vscode.extension.contributes.debuggers",
			"vscode.extension.contributes.debuggers.type",
			"vscode.extension.contributes.debuggers.label",
			"vscode.extension.contributes.debuggers.enableBreakpointsFor",
			"vscode.extension.contributes.debuggers.enableBreakpointsFor.languageIds",
			"vscode.extension.contributes.debuggers.program",
			"vscode.extension.contributes.debuggers.args",
			"vscode.extension.contributes.debuggers.runtime",
			"vscode.extension.contributes.debuggers.runtimeArgs",
			"vscode.extension.contributes.debuggers.variables",
			"vscode.extension.contributes.debuggers.initialConfigurations",
			"vscode.extension.contributes.debuggers.configurationAttributes",
			"vscode.extension.contributes.debuggers.windows",
			"vscode.extension.contributes.debuggers.windows.runtime",
			"vscode.extension.contributes.debuggers.osx",
			"vscode.extension.contributes.debuggers.osx.runtime",
			"vscode.extension.contributes.debuggers.linux",
			"vscode.extension.contributes.debuggers.linux.runtime",
			"vscode.extension.contributes.breakpoints",
			"vscode.extension.contributes.breakpoints.language",
			"app.launch.json.title",
			"app.launch.json.version",
			"app.launch.json.configurations",
			"debugNoType",
			"duplicateDebuggerType",
			"selectDebug",
			"DebugConfig.failed"
		],
		"vs/workbench/services/extensions/electron-browser/extensionHost": [
			"extensionHostProcess.startupFailDebug",
			"extensionHostProcess.startupFail",
			"extensionHostProcess.error",
			"extensionHostProcess.crash"
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"treeAriaLabel"
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"copyValue",
			"copy"
		],
		"vs/workbench/parts/debug/browser/breakpointWidget": [
			"breakpointWidgetExpressionPlaceholder",
			"breakpointWidgetAriaLabel",
			"breakpointWidgetHitCountPlaceholder",
			"breakpointWidgetHitCountAriaLabel",
			"expression",
			"hitCount"
		],
		"vs/workbench/parts/html/browser/webview": [
			"devtools.webview"
		],
		"vs/workbench/parts/extensions/electron-browser/dependenciesViewer": [
			"error",
			"Unknown Dependency"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsWidgets": [
			"disabled",
			"disabledWorkspace",
			"installed",
			"enabled"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"terminal.integrated.copySelection.noSelection",
			"terminal.integrated.exitedWithCode"
		],
		"vs/workbench/browser/parts/activitybar/activityAction": [
			"titleKeybinding"
		],
		"vs/workbench/browser/parts/compositePart": [
			"compositeTitleTooltip",
			"ariaCompositeToolbarLabel"
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"textEditor",
			"textDiffEditor",
			"binaryDiffEditor",
			"groupOnePicker",
			"groupTwoPicker",
			"groupThreePicker",
			"allEditorsPicker",
			"view"
		],
		"vs/platform/keybinding/browser/keybindingServiceImpl": [
			"unboundCommands",
			"first.chord",
			"missing.chord"
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"quickOpenAriaLabel",
			"treeAriaLabel"
		],
		"vs/workbench/services/files/node/fileService": [
			"fileInvalidPath",
			"fileBinaryError",
			"fileNotFoundError",
			"fileIsDirectoryError",
			"unableToMoveCopyError",
			"foldersCopyError",
			"fileReadOnlyError"
		],
		"vs/workbench/parts/tasks/node/processRunnerConfiguration": [
			"ConfigurationParser.noCommand",
			"ConfigurationParser.noargs",
			"ConfigurationParser.globalMatcher",
			"ConfigurationParser.invalidCWD",
			"ConfigurationParser.noName",
			"ConfigurationParser.noTaskName",
			"ConfigurationParser.unknownMatcherKind",
			"ConfigurationParser.invalidVaraibleReference"
		],
		"vs/workbench/parts/feedback/browser/feedback": [
			"sendFeedback",
			"label.sendASmile",
			"patchedVersion1",
			"patchedVersion2",
			"sentiment",
			"smileCaption",
			"frownCaption",
			"other ways to contact us",
			"submit a bug",
			"request a missing feature",
			"tell us why?",
			"commentsHeader",
			"tweet",
			"character left",
			"characters left",
			"feedbackSending",
			"feedbackSent",
			"feedbackSendingError"
		],
		"vs/platform/extensions/common/abstractExtensionService": [
			"unknownDep",
			"failedDep1",
			"failedDep2",
			"activationError"
		],
		"vs/editor/common/services/modeServiceImpl": [
			"vscode.extension.contributes.languages",
			"vscode.extension.contributes.languages.id",
			"vscode.extension.contributes.languages.aliases",
			"vscode.extension.contributes.languages.extensions",
			"vscode.extension.contributes.languages.filenames",
			"vscode.extension.contributes.languages.filenamePatterns",
			"vscode.extension.contributes.languages.mimetypes",
			"vscode.extension.contributes.languages.firstLine",
			"vscode.extension.contributes.languages.configuration",
			"invalid.empty",
			"require.id",
			"opt.extensions",
			"opt.filenames",
			"opt.firstLine",
			"opt.configuration",
			"opt.aliases",
			"opt.mimetypes",
			"invalid"
		],
		"vs/workbench/electron-browser/integration": [
			"undo",
			"redo",
			"cut",
			"copy",
			"paste",
			"selectAll"
		],
		"vs/workbench/services/message/electron-browser/messageService": [
			{
				"key": "yesButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancelButton"
		],
		"vs/editor/common/services/modelServiceImpl": [
			"diagAndSource",
			"indentAutoMigrate"
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"integrity.ok",
			"integrity.dontShowAgain",
			"integrity.moreInfo",
			"integrity.prompt"
		],
		"vs/workbench/electron-browser/crashReporter": [
			"telemetry.enableCrashReporting"
		],
		"vs/workbench/services/themes/electron-browser/themeService": [
			"vscode.extension.contributes.themes",
			"vscode.extension.contributes.themes.label",
			"vscode.extension.contributes.themes.uiTheme",
			"vscode.extension.contributes.themes.path",
			"vscode.extension.contributes.iconThemes",
			"vscode.extension.contributes.iconThemes.id",
			"vscode.extension.contributes.iconThemes.label",
			"vscode.extension.contributes.iconThemes.path",
			"reqarray",
			"reqpath",
			"invalid.path.1",
			"reqarray",
			"reqpath",
			"reqid",
			"invalid.path.1",
			"error.cannotloadicontheme",
			"error.cannotparseicontheme",
			"error.cannotloadtheme",
			"error.cannotparsejson",
			"error.cannotparse",
			"schema.folderExpanded",
			"schema.folder",
			"schema.file",
			"schema.folderNames",
			"schema.folderName",
			"schema.folderNamesExpanded",
			"schema.folderNameExpanded",
			"schema.fileExtensions",
			"schema.fileExtension",
			"schema.fileNames",
			"schema.fileName",
			"schema.languageIds",
			"schema.languageId",
			"schema.fonts",
			"schema.id",
			"schema.src",
			"schema.font-path",
			"schema.font-format",
			"schema.font-weight",
			"schema.font-sstyle",
			"schema.font-size",
			"schema.iconDefinitions",
			"schema.iconDefinition",
			"schema.iconPath",
			"schema.fontCharacter",
			"schema.fontColor",
			"schema.fontSize",
			"schema.fontId",
			"schema.light",
			"schema.highContrast"
		],
		"vs/workbench/services/extensions/electron-browser/extensions": [
			"noWorkspace",
			"overwritingExtension",
			"extensionUnderDevelopment",
			"overwritingExtension"
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/editor/common/controller/cursor": [
			"corrupt.commands"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesWidget": [
			"referencesFailre",
			"referencesCount",
			"referenceCount",
			"missingPreviewMessage",
			"treeAriaLabel",
			"noResults",
			"peekView.alternateTitle"
		],
		"vs/base/browser/ui/resourceviewer/resourceViewer": [
			"imgMeta",
			"nativeBinaryError",
			"sizeB",
			"sizeKB",
			"sizeMB",
			"sizeGB",
			"sizeTB"
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debuggee"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"debugType",
			"debugName",
			"debugRequest",
			"debugConfigurationNames",
			"debugPrelaunchTask",
			"internalConsoleOptions",
			"debugWindowsConfiguration",
			"debugOSXConfiguration",
			"debugLinuxConfiguration",
			"relativePathsNotConverted"
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"araLabelTabActions"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"close",
			"closeOthers",
			"closeRight",
			"closeAll",
			"keepOpen",
			"showOpenedEditors",
			"araLabelEditorActions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"binaryDiffEditor",
			"cannotDiffTextToBinary",
			"metadataDiff"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"editorCommand.activeEditorMove.description",
			"editorCommand.activeEditorMove.arg.name",
			"editorCommand.activeEditorMove.arg.description",
			"commandDeprecated",
			"openKeybindings"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"singleSelectionRange",
			"singleSelection",
			"multiSelectionRange",
			"multiSelection",
			"endOfLineLineFeed",
			"endOfLineCarriageReturnLineFeed",
			"tabFocusModeEnabled",
			"disableTabMode",
			"gotoLine",
			"indentation",
			"selectEncoding",
			"selectEOL",
			"selectLanguageMode",
			"fileInfo",
			"spacesSize",
			{
				"key": "tabSize",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"showLanguageExtensions",
			"changeMode",
			"noEditor",
			"languageDescription",
			"languageDescriptionConfigured",
			"languagesPicks",
			"configureAssociationsExt",
			"autoDetect",
			"pickLanguage",
			"currentAssociation",
			"pickLanguageToConfigure",
			"changeIndentation",
			"noEditor",
			"noWritableCodeEditor",
			"indentView",
			"indentConvert",
			"pickAction",
			"changeEndOfLine",
			"noEditor",
			"noWritableCodeEditor",
			"pickEndOfLine",
			"changeEncoding",
			"noEditor",
			"noFileEditor",
			"saveWithEncoding",
			"reopenWithEncoding",
			"saveWithEncoding",
			"reopenWithEncoding",
			"pickAction",
			"pickEncodingForReopen",
			"pickEncodingForSave"
		],
		"vs/platform/markers/common/problemMatcher": [
			"ProblemMatcherParser.invalidMarkerDescription",
			"ProblemMatcherParser.unknownSeverity",
			"ProblemMatcherParser.loopProperty.notLast",
			"ProblemMatcherParser.loopProperty.notMultiLine",
			"ProblemMatcherParser.problemPattern.missingRegExp",
			"ProblemMatcherParser.problemPattern.missingProperty",
			"ProblemMatcherParser.problemPattern.watchingMatcher",
			"ProblemMatcherParser.invalidRegexp"
		],
		"vs/workbench/node/extensionPoints": [
			"jsonParseFail",
			"fileReadFail",
			"jsonParseFail",
			"fileReadFail",
			"missingNLSKey"
		],
		"vs/workbench/services/message/browser/messagelist/messageList": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage",
			"error",
			"warning",
			"info",
			"close"
		]
	},
	"messages": {
		"vs/code/electron-main/main": [
			"New Window",
			"Opens a new window",
			"{0} {1}"
		],
		"vs/code/node/cliProcessMain": [
			"Extension '{0}' not found.",
			"Extension '{0}' is not installed.",
			"Make sure you use the full extension ID, including the publisher, eg: {0}",
			"Extension '{0}' was successfully installed!",
			"Extension '{0}' is already installed.",
			"Found '{0}' in the marketplace.",
			"Installing...",
			"Extension '{0}' v{1} was successfully installed!",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled!"
		],
		"vs/editor/contrib/defineKeybinding/browser/defineKeybinding": [
			"Define Keybinding",
			"Press desired key combination and ENTER",
			"For your current keyboard layout press ",
			"You won't be able to produce this key combination under your current keyboard layout.",
			"Define Keybinding"
		],
		"vs/editor/contrib/accessibility/browser/accessibility": [
			"Thank you for trying out VS Code's accessibility options.",
			"Status:",
			"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
			"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.",
			"You can dismiss this tooltip and return to the editor by pressing Escape.",
			"Show Accessibility Help"
		],
		"vs/editor/contrib/suggest/electron-browser/snippetCompletion": [
			"Insert Snippet"
		],
		"vs/platform/actions/browser/menusExtensionPoint": [
			"menu items must be an arry",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to execute. The command must be declared in the 'commands'-section",
			"Identifier of an alternative command to execute. The command must be declared in the 'commands'-section",
			"Condition which must be true to show this item",
			"Group into which this command belongs",
			"Contributes menu items to the editor",
			"The editor title menu",
			"The editor context menu",
			"The editor tabs context menu",
			"The file explorer context menu",
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `icon` can be omitted or must be either a string or a literal like `{dark, light}`",
			"Identifier of the command to execute",
			"Title by which the command is represented in the UI",
			"(Optional) Category string by the command is grouped in the UI",
			"(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration",
			"Icon path when a light theme is used",
			"Icon path when a dark theme is used",
			"Contributes commands to the command palette.",
			"Command `{0}` appears multiple times in the `commands` section.",
			"`{0}` is not a valid menu identifier",
			"Menu item references a command `{0}` which is not defined in the 'commands' section.",
			"Menu item references an alt-command `{0}` which is not defined in the 'commands' section.",
			"Menu item references the same command as default and alt-command",
			"Sorry, but currently only the 'navigation' group of the 'editor/title' menu supports alt-commands"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"Toggle Status Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"Toggle Side Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"Toggle Side Bar Location",
			"View"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"Toggle Editor Group Vertical/Horizontal Layout",
			"Horizontal Editor Group Layout",
			"Vertical Editor Group Layout",
			"View"
		],
		"vs/workbench/browser/actions/openSettings": [
			"Unable to create '{0}' ({1}).",
			"Open User Settings",
			"The currently opened folder contains workspace settings that may override user settings",
			"Open Workspace Settings",
			"Don't show again",
			"Place your settings in this file to overwrite the default settings",
			"Open Keyboard Shortcuts",
			"Place your key bindings in this file to overwrite the defaults",
			"Open Workspace Settings",
			"Open a folder first to create workspace settings",
			"Place your settings in this file to overwrite default and user settings.",
			"Overwrite settings by placing them into your settings file.",
			"See http://go.microsoft.com/fwlink/?LinkId=808995 for the most commonly used settings.",
			"Default Settings",
			"Overwrite key bindings by placing them into your key bindings file.",
			"Default Keyboard Shortcuts",
			"Default Settings Editor",
			"Preferences"
		],
		"vs/workbench/browser/actions/configureLocale": [
			"Configure Language",
			"Defines VSCode's display language.",
			"See {0} for a list of supported languages.",
			"Changing the value requires to restart VSCode.",
			"Unable to create '{0}' ({1}).",
			"The UI Language to use."
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"{0}, editor group picker",
			"Group: {0}",
			"No matching opened editor found in group",
			"List of opened editors is currently empty in group",
			"No matching opened editor found",
			"List of opened editors is currently empty"
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"Show and Run Commands",
			"Go to Line",
			"Go to Line",
			"Go to Symbol in File",
			"Go to Symbol in File by Category",
			"Show Help"
		],
		"vs/workbench/parts/files/browser/fileActions.contribution": [
			"Files"
		],
		"vs/workbench/parts/files/browser/files.contribution": [
			"Show Explorer",
			"Explorer",
			"View",
			"Text File Editor",
			"Binary File Editor",
			"Files",
			"Configure glob patterns for excluding files and folders.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Configure file associations to languages (e.g. \"*.extension\": \"html\"). These have precedence over the default associations of the languages installed.",
			"The default character set encoding to use when reading and writing files.",
			"The default end of line character.",
			"When enabled, will trim trailing whitespace when you save a file.",
			"Controls auto save of dirty files. Accepted values:  \"{0}\", \"{1}\", \"{2}\" (editor loses focus), \"{3}\" (window loses focus). If set to \"{4}\", you can configure the delay in \"files.autoSaveDelay\".",
			"Controls the delay in ms after which a dirty file is saved automatically. Only applies when \"files.autoSave\" is set to \"{0}\"",
			"Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.",
			"Format a file on save. A formatter must be available, the file must not be auto-saved, and editor must not be shutting down.",
			"File Explorer",
			"Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.",
			"Controls if the height of the open editors section should adapt dynamically to the number of elements or not.",
			"Controls if the explorer should automatically reveal files when opening them.",
			"Controls if the explorer should allow to move files and folders via drag and drop."
		],
		"vs/workbench/parts/files/electron-browser/files.electron.contribution": [
			"Files"
		],
		"vs/workbench/parts/search/browser/search.contribution": [
			"Find in Folder",
			"Go to Symbol in Workspace...",
			"Search",
			"Show Search",
			"View",
			"Find in Files",
			"Go to File",
			"Go to Symbol in Workspace",
			"Search",
			"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Configure to include results from a global symbol search in the file results for Quick Open."
		],
		"vs/workbench/parts/search/browser/searchViewlet": [
			"Toggle Search Details",
			"files to include",
			"Search Include Patterns",
			"files to exclude",
			"Search Exclude Patterns",
			"files excluded through settings",
			"Configured Search Exclude Patterns",
			"Replaced {0} occurrences across {1} files with {2}.",
			"Removed {0} occurrences across {1} files.",
			"Replace All",
			"Replace {0} occurrences across {1} files with '{2}'?",
			"Remove {0} occurrences across {1} files?",
			"Replace",
			"Search Results",
			"{0} when {1}",
			"The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.",
			"Search was canceled before any results could be found - ",
			"No results found in '{0}' excluding '{1}' - ",
			"No results found in '{0}' - ",
			"No results found excluding '{0}' - ",
			"No results found. Review your settings for configured exclusions - ",
			"Search again",
			"Search again in all files",
			"Open Settings",
			"Search returned {0} results in {1} files"
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"file and symbol results",
			"file results"
		],
		"vs/workbench/parts/git/browser/gitQuickOpen": [
			"{0}, git",
			"Branch at {0}",
			"Remote branch at {0}",
			"Tag at {0}",
			"Branch {0} is already the current branch",
			"{0}, git branch",
			"Create branch {0}",
			"No other branches",
			"Please provide a valid branch name"
		],
		"vs/workbench/parts/git/browser/gitActions.contribution": [
			"Switch to Changes View",
			"Switch to Editor View",
			"Stage",
			"Unstage",
			"Stage Selected Lines",
			"Unstage Selected Lines",
			"Open Change",
			"Open File",
			"Git"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"Show Debug",
			"Debug Console",
			"Debug",
			"Debug Console",
			"View",
			"View",
			"Debug",
			"Debug Error",
			"Debug",
			"Allows setting breakpoint in any file",
			"Automatically open explorer viewlet on the end of a debug session"
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"Read Eval Print Loop Panel",
			"History Previous",
			"History Next",
			"REPL Accept Input"
		],
		"vs/workbench/parts/debug/browser/debugViewlet": [
			"There is no currently opened folder.",
			"Open a folder in order to start debugging."
		],
		"vs/workbench/parts/html/browser/html.contribution": [
			"Html Preview"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"Manage Extensions",
			"Install Gallery Extensions",
			"Extension",
			"Extensions",
			"View",
			"Extensions",
			"Automatically update extensions"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen": [
			"Press Enter to manage your extensions.",
			"Press Enter to search for '{0}' in the Marketplace.",
			"Type an extension name"
		],
		"vs/workbench/parts/output/browser/output.contribution": [
			"Output",
			"View",
			"View",
			"Clear Output"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"Search Extensions in Marketplace",
			"Sort By: Install Count",
			"Sort By: Rating",
			"Sort Order: ↑",
			"Sort Order: ↓",
			"No extensions found.",
			"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting.",
			"Extensions",
			"{0} Outdated Extensions"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"{0}, Output panel",
			"Output panel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"Integrated Terminal",
			"The path of the shell that the terminal uses on Linux.",
			"The command line arguments to use when on the Linux terminal.",
			"The path of the shell that the terminal uses on OS X.",
			"The command line arguments to use when on the OS X terminal.",
			"The path of the shell that the terminal uses on Windows. When using shells shipped with Windows (cmd, PowerShell or Bash on Ubuntu), prefer C:\\Windows\\sysnative over C:\\Windows\\System32 to use the 64-bit versions.",
			"The command line arguments to use when on the Windows terminal.",
			"Controls the font family of the terminal, this defaults to editor.fontFamily's value.",
			"Controls whether font ligatures are enabled in the terminal.",
			"Controls the font size in pixels of the terminal, this defaults to editor.fontSize's value.",
			"Controls the line height of the terminal, this number is multipled by the terminal font size to get the actual line-height in pixels.",
			"Controls whether the terminal cursor blinks.",
			"Controls whether locale variables are set at startup of the terminal, this defaults to true on OS X, false on other platforms.",
			"A set of command IDs whose keybindings will not be sent to the shell and instead always be handled by Code. This allows the use of keybindings that would normally be consumed by the shell to act the same as when the terminal is not focused, for example ctrl+p to launch Quick Open.",
			"Terminal",
			"Terminal",
			"View"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"New Terminal",
			"Copy",
			"Paste"
		],
		"vs/workbench/parts/emmet/node/emmet.contribution": [
			"Emmet",
			"When enabled, emmet abbreviations are expanded when pressing TAB.",
			"Preferences used to modify behavior of some actions and resolvers of Emmet.",
			"Define profile for specified syntax or use your own profile with specific rules.",
			"An array of languages where emmet abbreviations should not be expanded."
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"Tasks are only available on a workspace folder.",
			"Run Build Task",
			"Run Test Task",
			"Run Rebuild Task",
			"Run Clean Task",
			"Tasks are only available on a workspace folder.",
			"Select a Task Runner",
			"Auto detecting tasks for {0}",
			"Auto detecting the task system failed. Using default template. Consult the task output for details.",
			"Unable to create the 'tasks.json' file inside the '.vscode' folder. Consult the task output for details.",
			"Configure Task Runner",
			"Configure Build Task",
			"Close",
			"Terminate Running Task",
			"The launched process doesn't exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.",
			"Failed to terminate running task",
			"Show Task Log",
			"Run Task",
			"Problems",
			"99+",
			"Tasks",
			"Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\n",
			"No task runner configured.",
			"No valid task runner configured. Supported task runners are 'service' and 'program'.",
			"The task is already active and in watch mode.",
			"There is an active running task right now. Terminate it first before executing another task.",
			"There is a task running. Do you want to terminate it?",
			"&&Terminate Task",
			"The launched task doesn't exist anymore. If the task spawned background processes exiting VS Code might result in orphaned processes. To avoid this start the last background process with a wait flag.",
			"&&Exit Anyways",
			"An error has occurred while running a task. See task log for details.",
			"Tasks",
			"Run Task",
			"The regular expression to find an error, warning or info in the output.",
			"The match group index of the filename. If omitted 1 is used.",
			"The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted line and column is assumed.",
			"The match group index of the problem's line. Defaults to 2",
			"The match group index of the problem's column. Defaults to 3",
			"The match group index of the problem's end line. Defaults to undefined",
			"The match group index of the problem's end column. Defaults to undefined",
			"The match group index of the problem's severity. Defaults to undefined",
			"The match group index of the problem's code. Defaults to undefined",
			"The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.",
			"In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.",
			"The regular expression to detect the begin or end of a watching task.",
			"The match group index of the filename. Can be omitted.",
			"The name of a base problem matcher to use.",
			"The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.",
			"The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.",
			"Controls if a problem reported on a text document is applied only to open, closed or all documents.",
			"A problem pattern or the name of a predefined problem pattern. Can be omitted if base is specified.",
			"Defines how file names reported in a problem pattern should be interpreted.",
			"If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern",
			"If matched in the output the start of a watching task is signaled.",
			"If matched in the output the end of a watching task is signaled.",
			"A regular expression signaling that a watched tasks begins executing triggered through file watching.",
			"A regular expression signaling that a watched tasks ends executing.",
			"The command to be executed. Can be an external program or a shell command.",
			"Specifies whether the command is a shell command or an external program. Defaults to false if omitted.",
			"Additional arguments passed to the command.",
			"Additional command options",
			"The current working directory of the executed program or script. If omitted Code's current workspace root is used.",
			"The environment of the executed program or shell. If omitted the parent process' environment is used.",
			"Controls whether the output of the running task is shown or not. If omitted 'always' is used.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Whether the user is prompted when VS Code closes with a running background task.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Controls whether the task name is added as an argument to the command. Default is false.",
			"Prefix to indicate that an argument is task.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The task configurations. Usually these are enrichments of task already defined in the external task runner.",
			"The task's name",
			"Additional arguments passed to the command when this task is invoked.",
			"Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.",
			"Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Maps this task to Code's default build command.",
			"Maps this task to Code's default test command.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The config's version number",
			"Windows specific build configuration",
			"Mac specific build configuration",
			"Linux specific build configuration"
		],
		"vs/workbench/parts/execution/electron-browser/terminal.contribution": [
			"External Terminal",
			"Customizes which terminal to run on Windows.",
			"Customizes which terminal application to run on OS X.",
			"Customizes which terminal to run on Linux.",
			"Open New Command Prompt",
			"Open New Terminal",
			"Open in Command Prompt",
			"Open in Terminal"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"Open User Snippets",
			"Select Language for Snippet",
			"Unable to create {0}",
			"Preferences",
			"Empty snippet",
			"User snippet configuration",
			"The prefix to used when selecting the snippet in intellisense",
			"The snippet content. Use '${id}', '${id:label}', '${1:label}' for variables and '$0', '$1' for the cursor positions",
			"The snippet description."
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"Color Theme",
			"Problem loading theme: {0}",
			"Select Color Theme",
			"File Icon Theme",
			"None",
			"Disable file icons",
			"Problem loading icon theme: {0}",
			"Select File Icon Theme",
			"Find more in the Marketplace...",
			"Preferences"
		],
		"vs/workbench/parts/update/electron-browser/update.contribution": [
			"Release notes",
			"Update",
			"Configure whether you receive automatic updates from an update channel. Requires a restart after change."
		],
		"vs/workbench/parts/nps/electron-browser/nps.contribution": [
			"Do you mind taking a quick feedback survey?",
			"Take Survey",
			"Remind Me later",
			"Don't Show Again"
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"Install '{0}' command in PATH",
			"Please remove the alias referencing '{0}' in '{1}' (line {2}) and retry this action.",
			"Edit '{0}'",
			"Please remove the '{0}' alias from '{1}' before continuing.",
			"Continue",
			"Cancel",
			"Shell command '{0}' successfully installed in PATH.",
			"Code will now prompt with 'osascript' for Administrator privileges to install the shell command.",
			"OK",
			"Unable to create '/usr/local/bin'.",
			"Cancel",
			"Aborted",
			"Uninstall '{0}' command from PATH",
			"Shell command '{0}' successfully uninstalled from PATH.",
			"Code needs to change the '{0}' shell command. Would you like to do this now?",
			"Change Now",
			"Later",
			"Remember you can always run the '{0}' action from the Command Palette.",
			"Shell Command"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"View",
			"Help",
			"Developer",
			"File",
			"Workbench",
			"Controls if opened editors should show in tabs or not.",
			"Controls if opened editors should show with an icon or not. This requires an icon theme to be enabled as well.",
			"Controls if opened editors show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).",
			"Controls if opened editors from Quick Open show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).",
			"Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the current active one. Select 'first' or 'last' to open editors independently from the currently active one.",
			"Controls if Quick Open should close automatically once it loses focus.",
			"Controls if opening settings also opens an editor showing all default settings.",
			"Controls the location of the sidebar. It can either show on the left or right of the workbench.",
			"Controls the visibility of the status bar at the bottom of the workbench.",
			"Window",
			"When enabled, will open files in a new window instead of reusing an existing instance.",
			"Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.",
			"Controls if a window should restore to full screen mode if it was exited in full screen mode.",
			"Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity."
		],
		"vs/workbench/electron-browser/main": [
			"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.",
			"Failed to load a required file. Please restart the application to try again. Details: {0}"
		],
		"vs/workbench/parts/watermark/browser/watermark": [
			"Command Palette",
			"Go to File",
			"Move Lines Up/Down",
			"Add Cursors Above/Below",
			"Toggle Terminal",
			"unbound"
		],
		"vs/workbench/node/extensionHostMain": [
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/base/node/processes": [
			"Can't execute a shell command on an UNC drive."
		],
		"vs/platform/environment/node/argv": [
			"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:COLUMN))`.",
			"Open a diff editor. Requires to pass two file paths as arguments.",
			"Open the file at path at the line and column (add :line[:column] to path).",
			"The locale to use (e.g. en-US or zh-TW).",
			"Force a new instance of Code.",
			"Start with the 'Developer: Startup Performance' command enabled.",
			"Force opening a file or folder in the last active window.",
			"Specifies the directory that user data is kept in, useful when running as root.",
			"Print verbose output (implies --wait).",
			"Wait for the window to be closed before returning.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extension.",
			"Installs an extension.",
			"Uninstalls an extension.",
			"Disable all installed extensions.",
			"Disable GPU hardware acceleration.",
			"Print version.",
			"Print usage.",
			"Usage",
			"options",
			"paths",
			"Options"
		],
		"vs/code/electron-main/windows": [
			"You can still access the menu bar by pressing the **Alt** key.",
			"OK",
			"Path does not exist",
			"The path '{0}' does not seem to exist anymore on disk.",
			"Accessibility Options",
			"Reopen",
			"Keep Waiting",
			"Close",
			"The window is no longer responding",
			"You can reopen or close the window or keep waiting.",
			"Reopen",
			"Close",
			"The window has crashed",
			"We are sorry for the inconvenience! You can reopen the window to continue where you left off."
		],
		"vs/code/electron-main/menus": [
			"&&File",
			"&&Edit",
			"&&View",
			"&&Go",
			"Window",
			"&&Help",
			"&&New Window",
			"About {0}",
			"Hide {0}",
			"Hide Others",
			"Show All",
			"Quit {0}",
			"&&New File",
			"&&New File",
			"&&Open...",
			"Open &&Folder...",
			"&&Open File...",
			"&&Open File...",
			"Open &&Recent",
			"&&Save",
			"Save &&As...",
			"Save A&&ll",
			"Auto Save",
			"&&New Window",
			"Revert F&&ile",
			"Close &&Window",
			"Close &&Folder",
			"Close &&Editor",
			"E&&xit",
			"&&User Settings",
			"&&Workspace Settings",
			"&&Keyboard Shortcuts",
			"User &&Snippets",
			"&&Color Theme",
			"File &&Icon Theme",
			"&&Preferences",
			"&&Reopen Closed Editor",
			"&&Clear Items",
			"&&Undo",
			"&&Redo",
			"&&Cut",
			"C&&opy",
			"&&Paste",
			"&&Select All",
			"&&Undo",
			"&&Redo",
			"&&Cut",
			"C&&opy",
			"&&Paste",
			"&&Select All",
			"&&Find",
			"&&Replace",
			"Find &&in Files",
			"Replace &&in Files",
			"&&Explorer",
			"&&Search",
			"&&Git",
			"&&Debug",
			"E&&xtensions",
			"&&Output",
			"De&&bug Console",
			"&&Integrated Terminal",
			"&&Problems",
			"&&Command Palette...",
			"Toggle &&Full Screen",
			"Toggle Menu &&Bar",
			"Split &&Editor",
			"Toggle Editor Group &&Layout",
			"&&Toggle Side Bar",
			"&&Move Side Bar Right",
			"&&Move Side Bar Left",
			"Toggle &&Panel",
			"&&Hide Status Bar",
			"&&Show Status Bar",
			"Toggle &&Word Wrap",
			"Toggle &&Render Whitespace",
			"Toggle &&Control Characters",
			"&&Zoom In",
			"Zoom O&&ut",
			"&&Reset Zoom",
			"&&Back",
			"&&Forward",
			"&&Next Editor",
			"&&Previous Editor",
			"&&Next Used Editor in Group",
			"&&Previous Used Editor in Group",
			"Switch &&Editor",
			"&&First Group",
			"&&Second Group",
			"&&Third Group",
			"&&Next Group",
			"&&Previous Group",
			"Switch &&Group",
			"Go to &&File...",
			"Go to &&Symbol in File...",
			"Go to Symbol in &&Workspace...",
			"Go to &&Definition",
			"Go to &&Line...",
			"Minimize",
			"Close",
			"Bring All to Front",
			"&&Toggle Developer Tools",
			"Accessibility &&Options",
			"Report &&Issues",
			"&&Documentation",
			"&&Release Notes",
			"&&Keyboard Shortcuts Reference",
			"Introductory &&Videos",
			"&&Join us on Twitter",
			"&&Search Feature Requests",
			"View &&License",
			"&&Privacy Statement",
			"&&About",
			"Restart To Update...",
			"Checking For Updates...",
			"Download Available Update",
			"Downloading Update...",
			"Installing Update...",
			"Check For Updates...",
			"\nVersion {0}\nCommit {1}\nDate {2}\nShell {3}\nRenderer {4}\nNode {5}",
			"OK"
		],
		"vs/workbench/parts/git/electron-main/askpassService": [
			"Git"
		],
		"vs/platform/request/common/request": [
			"HTTP",
			"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables",
			"Whether the proxy server certificate should be verified against the list of supplied CAs.",
			"The value to send as the 'Proxy-Authorization' header for every network request."
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Extension invalid: package.json is not a JSON file.",
			"Extension invalid: manifest name mismatch.",
			"Extension invalid: manifest publisher mismatch.",
			"Extension invalid: manifest version mismatch.",
			"Please restart Code before reinstalling {0}.",
			"Please restart Code before reinstalling {0}.",
			"Installing '{0}' also installs its dependencies. Would you like to continue?",
			"Yes",
			"No",
			"Please restart Code before reinstalling {0}.",
			"Would you like to uninstall '{0}' only or its dependencies also?",
			"Only",
			"All",
			"Cancel",
			"Are you sure you want to uninstall '{0}'?",
			"Ok",
			"Cancel",
			"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Could not find extension"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"Extension not found",
			"Couldn't find a compatible version of {0} with this version of Code."
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Telemetry",
			"Enable usage data and errors to be sent to Microsoft."
		],
		"vs/platform/message/common/message": [
			"Close",
			"Later",
			"Cancel"
		],
		"vs/base/common/keybinding": [
			"Windows",
			"Control",
			"Shift",
			"Alt",
			"Command",
			"Windows",
			"Ctrl",
			"Shift",
			"Alt",
			"Command",
			"Windows"
		],
		"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode": [
			"Toggle Use of Tab Key for Setting Focus"
		],
		"vs/editor/common/config/commonEditorConfig": [
			"Editor",
			"Controls the font family.",
			"Controls the font weight.",
			"Controls the font size in pixels.",
			"Controls the line height. Use 0 to compute the lineHeight from the fontSize.",
			"Controls the display of line numbers. Possible values are 'on', 'off', and 'relative'. 'relative' shows the line count from the current cursor position.",
			"Columns at which to show vertical rulers",
			"Characters that will be used as word separators when doing word related navigations or operations",
			"The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'number'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"Insert spaces when pressing Tab. This setting is overriden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'boolean'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.",
			"Controls if selections have rounded corners",
			"Controls if the editor will scroll beyond the last line",
			"Controls after how many characters the editor will wrap to the next line. Setting this to 0 turns on viewport width wrapping (word wrapping). Setting this to -1 forces the editor to never wrap.",
			"Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).",
			"Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events",
			"Controls if quick suggestions should show up or not while typing",
			"Controls the delay in ms after which quick suggestions will show up",
			"Enables parameter hints",
			"Controls if the editor should automatically close brackets after opening them",
			"Controls if the editor should automatically format the line after typing",
			"Controls if suggestions should automatically show up when typing trigger characters",
			"Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether copying without a selection copies the current line.",
			"Enable word based suggestions.",
			"Font size for the suggest widget",
			"Line height for the suggest widget",
			"Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled.",
			"Controls whether the editor should highlight similar matches to the selection",
			"Controls the number of decorations that can show up at the same position in the overview ruler",
			"Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'",
			"Zoom the font of the editor when using mouse wheel and holding Ctrl",
			"Controls the cursor style, accepted values are 'block', 'line' and 'underline'",
			"Enables font ligatures",
			"Controls if the cursor should be hidden in the overview ruler.",
			"Controls how the editor should render whitespace characters, posibilties are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.",
			"Controls whether the editor should render control characters",
			"Controls whether the editor should render indent guides",
			"Controls whether the editor should render the current line highlight",
			"Controls if the editor shows code lenses",
			"Controls whether the editor has code folding enabled",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Inserting and deleting whitespace follows tab stops",
			"Remove trailing auto inserted whitespace",
			"Keep peek editors open even when double clicking their content or when hitting Escape.",
			"Controls if the diff editor shows the diff side by side or inline",
			"Controls if the diff editor shows changes in leading or trailing whitespace as diffs",
			"Controls if the Linux primary clipboard should be supported."
		],
		"vs/editor/common/modes/snippetsRegistry": [
			"{0}, {1}"
		],
		"vs/editor/contrib/clipboard/browser/clipboard": [
			"Cut",
			"Copy",
			"Paste"
		],
		"vs/editor/contrib/comment/common/comment": [
			"Toggle Line Comment",
			"Add Line Comment",
			"Remove Line Comment",
			"Toggle Block Comment"
		],
		"vs/editor/contrib/contextmenu/browser/contextmenu": [
			"Show Editor Context Menu"
		],
		"vs/editor/contrib/format/common/formatActions": [
			"Format Document",
			"Format Selection"
		],
		"vs/editor/contrib/goToDeclaration/browser/goToDeclaration": [
			" – {0} definitions",
			"Go to Definition",
			"Open Definition to the Side",
			"Peek Definition",
			"Click to show {0} definitions."
		],
		"vs/editor/contrib/gotoError/browser/gotoError": [
			"({0}/{1})",
			"Go to Next Error or Warning",
			"Go to Previous Error or Warning"
		],
		"vs/editor/contrib/hover/browser/hover": [
			"Show Hover"
		],
		"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace": [
			"Replace with Previous Value",
			"Replace with Next Value"
		],
		"vs/editor/contrib/carretOperations/common/carretOperations": [
			"Move Carret Left",
			"Move Carret Right"
		],
		"vs/editor/contrib/linesOperations/common/linesOperations": [
			"Copy Line Up",
			"Copy Line Down",
			"Move Line Up",
			"Move Line Down",
			"Sort Lines Ascending",
			"Sort Lines Descending",
			"Trim Trailing Whitespace",
			"Delete Line",
			"Indent Line",
			"Outdent Line",
			"Insert Line Above",
			"Insert Line Below"
		],
		"vs/editor/contrib/links/browser/links": [
			"Cmd + click to follow link",
			"Ctrl + click to follow link",
			"Sorry, failed to open this link because it is not well-formed: {0}",
			"Sorry, failed to open this link because its target is missing.",
			"Open Link"
		],
		"vs/editor/contrib/multicursor/common/multicursor": [
			"Add Cursor Above",
			"Add Cursor Below",
			"Create Multiple Cursors from Selected Lines"
		],
		"vs/editor/contrib/parameterHints/browser/parameterHints": [
			"Trigger Parameter Hints"
		],
		"vs/editor/contrib/quickFix/browser/quickFix": [
			"Show Fixes ({0})",
			"Show Fixes",
			"Quick Fix"
		],
		"vs/editor/contrib/referenceSearch/browser/referenceSearch": [
			" – {0} references",
			"Find All References"
		],
		"vs/editor/contrib/rename/browser/rename": [
			"Sorry, rename failed to execute.",
			"Rename Symbol"
		],
		"vs/editor/contrib/smartSelect/common/smartSelect": [
			"Expand Select",
			"Shrink Select"
		],
		"vs/editor/contrib/smartSelect/common/jumpToBracket": [
			"Go to Bracket"
		],
		"vs/editor/contrib/suggest/browser/suggestController": [
			"Trigger Suggest"
		],
		"vs/editor/contrib/toggleWordWrap/common/toggleWordWrap": [
			"View: Toggle Word Wrap"
		],
		"vs/editor/contrib/folding/browser/folding": [
			"Unfold",
			"Unfold Recursively",
			"Fold",
			"Fold Recursively",
			"Fold All",
			"Unfold All",
			"Fold Level 1",
			"Fold Level 2",
			"Fold Level 3",
			"Fold Level 4",
			"Fold Level 5"
		],
		"vs/editor/contrib/indentation/common/indentation": [
			"Convert Indentation to Spaces",
			"Convert Indentation to Tabs",
			"Configured Tab Size",
			"Select Tab Size for Current File",
			"Indent Using Tabs",
			"Indent Using Spaces",
			"Detect Indentation from Content",
			"Toggle Render Whitespace",
			"Toggle Control Characters"
		],
		"vs/platform/extensions/common/extensionsRegistry": [
			"For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.",
			"The publisher of the VS Code extension.",
			"The display name for the extension used in the VS Code gallery.",
			"The categories used by the VS Code gallery to categorize the extension.",
			"Banner used in the VS Code marketplace.",
			"The banner color on the VS Code marketplace page header.",
			"The color theme for the font used in the banner.",
			"All contributions of the VS Code extension represented by this package.",
			"Sets the extension to be flagged as a Preview in the Marketplace.",
			"Activation events for the VS Code extension.",
			"Array of badges to display in the sidebar of the Marketplace's extension page.",
			"Badge image URL.",
			"Badge link.",
			"Badge description.",
			"Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"Script executed before the package is published as a VS Code extension.",
			"The path to a 128x128 pixel icon."
		],
		"vs/workbench/browser/parts/editor/stringEditor": [
			"Text Editor",
			"{0}. Readonly text editor.",
			"Readonly text editor.",
			"{0}. Untitled file text editor.",
			"Untitled file text editor."
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"{0}, picker",
			"picker"
		],
		"vs/workbench/browser/quickopen": [
			"No results matching",
			"No results found",
			"{0}, command",
			"No commands matching"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"Go to Symbol in File...",
			"symbols ({0})",
			"methods ({0})",
			"functions ({0})",
			"constructors ({0})",
			"variables ({0})",
			"classes ({0})",
			"interfaces ({0})",
			"namespaces ({0})",
			"packages ({0})",
			"modules ({0})",
			"properties ({0})",
			"enumerations ({0})",
			"strings ({0})",
			"rules ({0})",
			"files ({0})",
			"arrays ({0})",
			"numbers ({0})",
			"booleans ({0})",
			"objects ({0})",
			"keys ({0})",
			"{0}, symbols",
			"No symbols matching",
			"No symbols found",
			"Type to narrow down symbols of the currently active editor.",
			"No symbol information for the file",
			"Open a text file first to go to a symbol"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"Show All Commands",
			"{0}, {1}, commands",
			"{0}, commands",
			"Command '{0}' can not be run from here.",
			"Command '{0}' is not enabled in the current context.",
			"Command '{0}' is not enabled in the current context.",
			"{0}: {1}",
			"{0}: {1}",
			"No commands matching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"Go to Line...",
			"Type a line number between 1 and {0} to navigate to",
			"Type a line number to navigate to",
			"Go to line {0} and character {1}",
			"Go to line {0}",
			"Type a line number to navigate to.",
			"Open a text file first to go to a line"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"{0}, picker help",
			"global commands",
			"editor commands"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			"{0} ({1})"
		],
		"vs/workbench/parts/files/browser/saveErrorHandler": [
			"Discard",
			"Overwrite",
			"Retry",
			"Failed to save '{0}': File is write protected. Select 'Overwrite' to remove protection.",
			"Failed to save '{0}': {1}",
			"Failed to save '{0}': The content on disk is newer. Click on **Compare** to compare your version with the one on disk.",
			"Compare",
			"{0} (on disk) ↔ {1} (in {2})",
			"Resolve save conflict",
			"Use the actions in the editor tool bar to either **undo** your changes or **overwrite** the content on disk with your changes",
			"Use local changes and overwrite disk contents",
			"The content of the file on disk has changed and the left hand side of the compare editor was refreshed. Please review and resolve again.",
			"Discard local changes and revert to content on disk"
		],
		"vs/workbench/parts/files/browser/fileActions": [
			"Retry",
			"Rename",
			"Rename",
			"You are renaming a folder with unsaved changes in 1 file. Do you want to continue?",
			"You are renaming a folder with unsaved changes in {0} files. Do you want to continue?",
			"You are renaming a file with unsaved changes. Do you want to continue?",
			"Your changes will be lost if you don't save them.",
			"&&Rename",
			"New File",
			"New Folder",
			"Open a folder first to create files or folders within.",
			"New Untitled File",
			"New File",
			"New Folder",
			"New File",
			"New Folder",
			"&&Move to Recycle Bin",
			"&&Move to Trash",
			"&&Delete",
			"You are deleting a folder with unsaved changes in 1 file. Do you want to continue?",
			"You are deleting a folder with unsaved changes in {0} files. Do you want to continue?",
			"You are deleting a file with unsaved changes. Do you want to continue?",
			"Your changes will be lost if you don't save them.",
			"Are you sure you want to delete '{0}' and its contents?",
			"Are you sure you want to delete '{0}'?",
			"You can restore from the recycle bin.",
			"You can restore from the trash.",
			"Are you sure you want to permanently delete '{0}' and its contents?",
			"Are you sure you want to permanently delete '{0}'?",
			"This action is irreversible!",
			"Delete Permanently",
			"Delete",
			"Import Files",
			"A file or folder with the same name already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace",
			"Copy",
			"Paste",
			"Duplicate",
			"Open to the Side",
			"Select for Compare",
			"Compare Active File With...",
			"Select an editor history entry to compare with",
			"The selected file can not be compared with '{0}'.",
			"Open a file first to compare it with another file.",
			"Compare with '{0}'",
			"Compare Files",
			"Refresh",
			"Save",
			"Save As...",
			"Save All",
			"Save All in Group",
			"Save Dirty Files",
			"Revert File",
			"Focus on Open Editors View",
			"Focus on Files Explorer",
			"Show Active File in Explorer",
			"Open a file first to show it in the explorer",
			"Collapse Folders in Explorer",
			"Refresh Explorer",
			"A file or folder name must be provided.",
			"A file or folder **{0}** already exists at this location. Please choose a different name.",
			"The name **{0}** is not valid as a file or folder name. Please choose a different name.",
			"The name **{0}** results in a path that is too long. Please choose a shorter name."
		],
		"vs/workbench/browser/viewlet": [
			"Collapse All",
			"{0} actions",
			"{0} actions"
		],
		"vs/workbench/parts/files/browser/views/emptyView": [
			"Files Explorer Section",
			"No Folder Opened",
			"You have not yet opened a folder.",
			"Open Folder"
		],
		"vs/workbench/parts/files/browser/views/explorerViewer": [
			"Type file name. Press Enter to confirm or Escape to cancel.",
			"{0}, Files Explorer",
			"You are moving a folder with unsaved changes in 1 file. Do you want to continue?",
			"You are moving a folder with unsaved changes in {0} files. Do you want to continue?",
			"You are moving a file with unsaved changes. Do you want to continue?",
			"Your changes will be lost if you don't save them.",
			"&&Move",
			"'{0}' already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace"
		],
		"vs/workbench/parts/files/browser/views/explorerView": [
			"Files Explorer Section",
			"Files Explorer"
		],
		"vs/workbench/parts/files/browser/views/openEditorsView": [
			"Open Editors Section",
			"Open Editors",
			"Open Editors",
			"{0} unsaved"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Contributes configuration settings.",
			"A summary of the settings. This label will be used in the settings file as separating comment.",
			"Description of the configuration properties.",
			"if set, 'configuration.type' must be set to 'object",
			"'configuration.title' must be a string",
			"'configuration.properties' must be an object"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"Text File Editor",
			"Create File",
			"{0}. Text file editor.",
			"Text file editor."
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"Binary File Viewer"
		],
		"vs/workbench/parts/files/electron-browser/dirtyFilesTracker": [
			"{0} unsaved files"
		],
		"vs/workbench/parts/files/electron-browser/electronFileActions": [
			"Reveal in Explorer",
			"Reveal in Finder",
			"Open Containing Folder",
			"Reveal Active File in Windows Explorer",
			"Reveal Active File in Finder",
			"Open Containing Folder of Active File",
			"Open a file first to reveal",
			"Copy Path",
			"Copy Path of Active File",
			"Open a file first to copy its path",
			"Open File...",
			"Open Folder...",
			"Open...",
			"Open Active File in New Window",
			"Open a file first to open in new window"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"Show next search term",
			"Show previous search term",
			"Focus next input box",
			"Focus previous input box",
			"Replace in Files",
			"Find in Folder",
			"Refresh",
			"Clear Search Results",
			"Remove",
			"Replace All",
			"Replace",
			"Open Settings"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"Replace All (Submit Search to Enable)",
			"Replace All",
			"Toggle Replace",
			"Search: Type Search Term and press Enter to search or Escape to cancel",
			"Search",
			"Replace: Type replace term and press Enter to preview or Escape to cancel",
			"Replace",
			"Expression matches everything"
		],
		"vs/base/browser/ui/aria/aria": [
			"{0} (occurred again)"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"Use Regular Expression",
			"Match Whole Word",
			"Match Case",
			"input"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"input",
			"Use Glob Patterns",
			"The pattern to match. e.g. **\\*\\*/*.js** to match all JavaScript files or **myFolder/\\*\\*** to match that folder with all children.\n\n**Reference**:\n**\\*** matches 0 or more characters\n**?** matches 1 character\n**\\*\\*** matches zero or more directories\n**[a-z]** matches a range of characters\n**{a,b}** matches any of the patterns)"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"{0} matches found",
			"{0} match found",
			"{0} matches in file {1} of folder {2}, Search result",
			"Replace preview result, {0}",
			"{0}, Search result"
		],
		"vs/base/common/severity": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/workbench/parts/git/browser/gitWorkbenchContributions": [
			"Running git status",
			"{0} pending changes",
			"Show Git",
			"Git",
			"Git",
			"View",
			"Git Commands",
			"Git",
			"Is git enabled",
			"Path to the git executable",
			"Whether auto refreshing is enabled",
			"Whether auto fetching is enabled.",
			"Whether long commit messages should be warned about.",
			"Always allow large repositories to be managed by Code.",
			"Confirm before synchronizing git repositories.",
			"Controls the git badge counter."
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"{0}, file picker",
			"search results"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"{0}, symbols picker",
			"symbol results",
			"No symbols matching",
			"Type to search for symbols"
		],
		"vs/workbench/parts/git/browser/views/empty/emptyView": [
			"This workspace isn't yet under git source control.",
			"Initialize git repository"
		],
		"vs/workbench/parts/git/browser/views/changes/changesView": [
			"Please provide a commit message. You can always press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.",
			"Once there are some changes to commit, type in the commit message and either press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.",
			"It is recommended to keep the commit's first line under 50 characters. Feel free to use more lines for extra information.",
			"Message (press {0} to commit)",
			"Git: Type commit message and press {0} to commit",
			"Git Changes View",
			"Show Git Output"
		],
		"vs/workbench/parts/git/browser/views/gitless/gitlessView": [
			"You can either install it with {0}, download it from {1} or install the {2} command line developer tools, by simply typing {3} on a Terminal prompt.",
			"You can either install it with {0} or download it from {1}.",
			"You can download it from {0}.",
			"You can download it from {0}.",
			"It looks like git is not installed on your system.",
			"Once git is installed, please restart {0}."
		],
		"vs/workbench/parts/git/browser/views/notroot/notrootView": [
			"This directory seems to be contained in a git repository.",
			"Open the repository's root directory in order to access Git features."
		],
		"vs/workbench/parts/git/browser/views/disabled/disabledView": [
			"Git is disabled in the settings."
		],
		"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView": [
			"There is no currently opened folder.",
			"Open a folder with a Git repository in order to access Git features."
		],
		"vs/workbench/parts/git/browser/views/huge/hugeView": [
			"Your repository appears to have many active changes.\nThis can cause Code to become very slow.",
			"You can permanently disable this warning with the following setting:",
			"Allow large repositories"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"Text Diff Editor",
			"{0}. Readonly text compare editor.",
			"Readonly text compare editor.",
			"{0}. Text file compare editor.",
			"Text file compare editor.",
			"Switch to Inline View",
			"Switch to Side by Side View",
			"Next Change",
			"Previous Change"
		],
		"vs/workbench/parts/git/browser/gitActions": [
			"Open Change",
			"Open File",
			"Init",
			"Refresh",
			"Stage",
			"Stage All",
			"Are you sure you want to clean all changes?",
			"There are unstaged changes in {0} file.\n\nThis action is irreversible!",
			"There are unstaged changes in {0} files.\n\nThis action is irreversible!",
			"&&Clean Changes",
			"Are you sure you want to clean changes in '{0}'?",
			"This action is irreversible!",
			"&&Clean Changes",
			"Clean",
			"Clean All",
			"Unstage",
			"Unstage All",
			"Can't checkout. Please commit or stage your work first.",
			"Commit Staged",
			"Commit Staged (Signed Off)",
			"Commit",
			"Commit Message",
			"Commit All",
			"Commit All (Signed Off)",
			"Commit All",
			"Commit Staged",
			"Can't pull. Please commit or stage your work first.",
			"Authentication failed on the git remote.",
			"Authentication failed on the git remote.",
			"Push to...",
			"Pick a remote to push the branch '{0}' to:",
			"Authentication failed on the git remote.",
			"Publish",
			"Are you sure you want to publish '{0}' to '{1}'?",
			"&&Publish",
			"Pick a remote to publish the branch '{0}' to:",
			"Authentication failed on the git remote.",
			"This action will push and pull commits to and from '{0}'.",
			"Are you sure you want to continue?",
			"OK",
			"Cancel",
			"OK, Never Show Again",
			"Authentication failed on the git remote.",
			"Undo Last Commit"
		],
		"vs/workbench/parts/debug/electron-browser/debugViews": [
			"Variables Section",
			"Variables",
			"Debug Variables",
			"Expressions Section",
			"Watch",
			"Debug Watch Expressions",
			"Call Stack Section",
			"Paused on {0}",
			"Call Stack",
			"Debug Call Stack",
			"Breakpoints Section",
			"Breakpoints",
			"Debug Breakpoints"
		],
		"vs/workbench/parts/debug/browser/debugEditorModelManager": [
			"Breakpoint",
			"Disabled Breakpoint",
			"Unverified Breakpoint",
			"Unverified breakpoint. File is modified, please restart debug session.",
			"Conditional breakpoints not supported by this debug type"
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"Debugging started.",
			"Debugging paused, reason {0}, {1} {2}",
			"Debugging stopped.",
			"Added breakpoint, line {0}, file {1}",
			"Removed breakpoint, line {0}, file {1}",
			"Please set up the launch configuration file for your application.",
			"Configured debug type '{0}' is not supported.",
			"Missing property 'type' for the chosen launch configuration.",
			"Build errors have been detected during preLaunchTask '{0}'.",
			"Build error has been detected during preLaunchTask '{0}'.",
			"The preLaunchTask '{0}' terminated with exit code {1}.",
			"Debug Anyway",
			"Debug adapter process has terminated unexpectedly",
			"Could not find the preLaunchTask '{0}'.",
			"There is a task {0} running. Can not run pre launch task {1}.",
			"Source {0} is not available."
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"Add Breakpoint"
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"Object state is captured from first evaluation",
			"Click to follow (Cmd + click opens to the side)",
			"Click to follow (Ctrl + click opens to the side)",
			"Variable {0} has value {1}, read eval print loop, debug",
			"Expression {0} has value {1}, read eval print loop, debug",
			"{0}, read eval print loop, debug",
			"Output variable {0} has value {1}, read eval print loop, debug"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"Open {0}",
			"Configure or Fix 'launch.json'",
			"Select Configuration",
			"Start Debugging",
			"Restart",
			"Reconnect",
			"Step Over",
			"Step Into",
			"Step Out",
			"Step Back",
			"Stop",
			"Disconnect",
			"Continue",
			"Pause",
			"Restart Frame",
			"Remove Breakpoint",
			"Remove All Breakpoints",
			"Enable/Disable Breakpoint",
			"Enable All Breakpoints",
			"Disable All Breakpoints",
			"Activate Breakpoints",
			"Deactivate Breakpoints",
			"Reapply All Breakpoints",
			"Add Function Breakpoint",
			"Rename Function Breakpoint",
			"Add Conditional Breakpoint...",
			"Edit Breakpoint...",
			"Debug: Toggle Breakpoint",
			"Debug: Add Conditional Breakpoint...",
			"Set Value",
			"Debug: Run to Cursor",
			"Add Expression",
			"Debug: Evaluate",
			"Debug: Add to Watch",
			"Debug: Show Hover",
			"Add to Watch",
			"Edit Expression",
			"Remove Expression",
			"Remove All Expressions",
			"Clear Console",
			"Debug Console",
			"New Output in Debug Console",
			"Focus Debug Console",
			"Start Without Debugging"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"No Configurations"
		],
		"vs/workbench/parts/markers/browser/markersWorkbenchContributions": [
			"{0} Errors and Warnings"
		],
		"vs/workbench/parts/markers/electron-browser/markersElectronContributions": [
			"Copy"
		],
		"vs/workbench/parts/html/browser/htmlPreviewPart": [
			"Invalid editor input."
		],
		"vs/workbench/parts/markers/common/messages": [
			"View",
			"Show Problems",
			"Problems View",
			"Controls if Problems view should automatically reveal files when opening them",
			"Problems",
			"Problems grouped by files",
			"No problems have been detected in the workspace so far.",
			"No results found with provided filter criteria",
			"Filter Problems",
			"Filter by type or text",
			"errors",
			"warnings",
			"infos",
			"1 Error",
			"{0} Errors",
			"1 Warning",
			"{0} Warnings",
			"1 Info",
			"{0} Infos",
			"1 Unknown",
			"{0} Unknowns",
			"({0}, {1})",
			"{0} with {1} problems",
			"Error generated by {0}: {1} at line {2} and column {3}",
			"Error: {0} at line {1} and column {2}",
			"Warning generated by {0}: {1} at line {2} and column {3}",
			"Warning: {0} at line {1} and column {2}",
			"Info generated by {0}: {1} at line {2} and column {3}",
			"Info: {0} at line {1} and column {2}",
			"Problem generated by {0}: {1} at line {2} and column {3}",
			"Problem: {0} at line {1} and column {2}",
			"Errors and Warnings"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"It is recommended to install the '{0}' extension.",
			"Show Recommendations",
			"Don't show again",
			"Close",
			"This workspace has extension recommendations.",
			"Show Recommendations",
			"Don't show again",
			"Close"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsInput": [
			"Extension: {0}"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsWorkbenchService": [
			"'{0}' was successfully installed. Restart to enable it.",
			"Restart Now"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsFileTemplate": [
			"Extensions",
			"List of extensions recommendations. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.",
			"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
		],
		"vs/workbench/parts/extensions/electron-browser/extensionEditor": [
			"Extension name",
			"Extension identifier",
			"Publisher name",
			"Install count",
			"Rating",
			"License",
			"Details",
			"Contributions",
			"Changelog",
			"Dependencies",
			"No README available.",
			"No Changelog available.",
			"No Contributions",
			"No Dependencies",
			"Settings ({0})",
			"Name",
			"Description",
			"Default",
			"Debuggers ({0})",
			"Name",
			"Themes ({0})",
			"JSON Validation ({0})",
			"Commands ({0})",
			"Name",
			"Description",
			"Keyboard Shortcuts",
			"Menu Contexts",
			"Languages ({0})",
			"ID",
			"Name",
			"File Extensions",
			"Grammar",
			"Snippets"
		],
		"vs/editor/common/modes/modesRegistry": [
			"Plain Text"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"Install",
			"Installing",
			"Uninstall",
			"Uninstalling",
			"Update",
			"Enable (Workspace)",
			"Enable",
			"Disable (Workspace)",
			"Disable",
			"Workspace",
			"Always",
			"Enable",
			"Workspace",
			"Always",
			"Disable",
			"Reload",
			"Reload Now",
			"Reload to activate",
			"Reload this window to activate '{0}' extension?",
			"Reload to enable",
			"Reload this window to enable '{0}' extension?",
			"Reload to disable",
			"Reload this window to disable '{0}' extension?",
			"Reload to deactivate",
			"Reload this window to deactivate '{0}' extension?",
			"Update All Extensions",
			"Show Extensions",
			"Install Extensions",
			"Show Installed Extensions",
			"Show Disabled Extensions",
			"Clear Extensions Input",
			"Show Outdated Extensions",
			"Show Popular Extensions",
			"Show Recommended Extensions",
			"Show Workspace Recommended Extensions",
			"Open Extensions Folder",
			"Configure Recommended Extensions (Workspace)",
			"Recommendations are only available on a workspace folder.",
			"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).",
			"Install from VSIX...",
			"Built-in",
			"Disable All",
			"Disable All (Workspace)",
			"Enable All",
			"Enable All (Workspace)"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"Toggle Output",
			"Clear Output",
			"Switch to Output"
		],
		"vs/workbench/parts/output/browser/outputEditorInput": [
			"Output",
			"for '{0}'"
		],
		"vs/workbench/browser/parts/quickopen/quickopen.contribution": [
			"Go to File...",
			"Navigate Next in Quick Open",
			"Navigate Previous in Quick Open"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"Toggle Integrated Terminal",
			"Kill the Active Terminal Instance",
			"Kill Terminal",
			"Copy Selection",
			"Create New Integrated Terminal",
			"New Terminal",
			"Focus Terminal",
			"Focus Next Terminal",
			"Focus Previous Terminal",
			"Paste into Active Terminal",
			"Run Selected Text In Active Terminal",
			"Switch Terminal Instance",
			"Scroll Down (Line)",
			"Scroll Down (Page)",
			"Scroll to Bottom",
			"Scroll Up (Line)",
			"Scroll Up (Page)",
			"Scroll to Top",
			"Clear"
		],
		"vs/base/common/errorMessage": [
			"{0}. Error code: {1}",
			"Permission Denied (HTTP {0})",
			"Permission Denied",
			"{0} (HTTP {1}: {2})",
			"{0} (HTTP {1})",
			"Unknown Connection Error ({0})",
			"An unknown connection error occurred. Either you are no longer connected to the internet or the server you are connected to is offline.",
			"{0}: {1}",
			"An unknown error occurred. Please consult the log for more details.",
			"A system error occured ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/workbench/services/history/browser/history": [
			" [Unsupported]",
			"[Extension Development Host] - {0}",
			"● {0}",
			"{0} - {1}",
			"{0} - {1} - {2}",
			"{0} - {1}",
			"{0} - {1}"
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"Active View Switcher"
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"Focus into Side Bar",
			"View"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"Close",
			"Toggle Panel",
			"Focus into Panel",
			"Toggle Maximized Panel",
			"View",
			"View",
			"View"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"Command '{0}' can not be run from here."
		],
		"vs/workbench/common/editor/diffEditorInput": [
			"{0} ↔ {1}"
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"Left",
			"Center",
			"Right",
			"Top",
			"Center",
			"Bottom",
			"Unable to open '{0}': {1}."
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to run when keybinding is triggered.",
			"Key or key sequence (separate keys with plus-sign and sequences with space, e.g Ctrl+O and Ctrl+L L for a chord",
			"Mac specific key or key sequence.",
			"Linux specific key or key sequence.",
			"Windows specific key or key sequence.",
			"Condition when the key is active.",
			"Contributes keybindings.",
			"Invalid `contributes.{0}`: {1}",
			"Keybindings configuration",
			"Key or key sequence (separated by space)",
			"Name of the command to execute",
			"Condition when the key is active."
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"Unable to write to the configuration file (Unknown Key)",
			"Unable to write to the configuration file (Invalid Target)",
			"Unable to write settings because no folder is opened. Please open a folder first and try again.",
			"Unable to write settings. Please open **User Settings** to correct errors/warnings in the file and try again.",
			"Unable to write settings. Please open **Workspace Settings** to correct errors/warnings in the file and try again.",
			"Unable to write settings because the file is dirty. Please save the **User Settings** file and try again.",
			"Unable to write settings because the file is dirty. Please save the **Workspace Settings** file and try again."
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"{0} (Press 'Enter' to confirm or 'Escape' to cancel)",
			"Press 'Enter' to confirm your input or 'Escape' to cancel",
			"There are no entries to pick from",
			"Type '?' to get help on the actions you can take from here",
			"recently opened",
			"recently opened",
			"No results found",
			"This quick open handler can not be used in the current context",
			"{0}, recently opened",
			"Remove From Editor History",
			"Select an editor entry to remove from history"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.",
			"Download .NET Framework 4.5",
			"Don't Show Again",
			"Failed to move '{0}' to the trash"
		],
		"vs/workbench/services/configurationResolver/node/configurationResolverService": [
			"Interactive variable {0} is not contributed but is specified in a configuration."
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"Do you want to save the changes you made to {0}?",
			"Do you want to save the changes to the following {0} files?",
			"...1 additional file not shown",
			"...{0} additional files not shown",
			"&&Save All",
			"&&Save",
			"Do&&n't Save",
			"Cancel",
			"Your changes will be lost if you don't save them.",
			"All Files",
			"No Extension"
		],
		"vs/workbench/parts/emmet/node/actions/expandAbbreviation": [
			"Emmet: Expand Abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/balance": [
			"Emmet: Balance (inward)",
			"Emmet: Balance (outward)"
		],
		"vs/workbench/parts/emmet/node/actions/matchingPair": [
			"Emmet: Go to Matching Pair"
		],
		"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation": [
			"Emmet: Wrap with Abbreviation",
			"Enter Abbreviation",
			"Abbreviation"
		],
		"vs/workbench/parts/emmet/node/actions/editPoints": [
			"Emmet: Previous Edit Point",
			"Emmet: Next Edit Point"
		],
		"vs/workbench/parts/emmet/node/actions/selectItem": [
			"Emmet: Select Previous Item",
			"Emmet: Select Next Item"
		],
		"vs/workbench/parts/emmet/node/actions/splitJoinTag": [
			"Emmet: Split/Join Tag"
		],
		"vs/workbench/parts/emmet/node/actions/toggleComment": [
			"Emmet: Toggle Comment"
		],
		"vs/workbench/parts/emmet/node/actions/removeTag": [
			"Emmet: Remove Tag"
		],
		"vs/workbench/parts/emmet/node/actions/mergeLines": [
			"Emmet: Merge Lines"
		],
		"vs/workbench/parts/emmet/node/actions/updateImageSize": [
			"Emmet: Update Image Size"
		],
		"vs/workbench/parts/emmet/node/actions/evaluateMath": [
			"Emmet: Evaluate Math Expression"
		],
		"vs/workbench/parts/emmet/node/actions/incrementDecrement": [
			"Emmet: Increment by 0.1",
			"Emmet: Increment by 1",
			"Emmet: Increment by 10",
			"Emmet: Decrement by 0.1",
			"Emmet: Decrement by 1",
			"Emmet: Decrement by 10"
		],
		"vs/workbench/parts/emmet/node/actions/reflectCssValue": [
			"Emmet: Reflect CSS Value"
		],
		"vs/workbench/parts/emmet/node/actions/updateTag": [
			"Emmet: Update Tag",
			"Enter Tag",
			"Tag"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}"
		],
		"vs/base/common/processes": [
			"Error: executable info must define a command of type string.",
			"Warning: isShellCommand must be of type boolean. Ignoring value {0}.",
			"Warning: args must be of type string[]. Ignoring value {0}.",
			"Warning: options.cwd must be of type string. Ignoring value {0}."
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"Compiles a TypeScript project",
			"Compiles a TypeScript project in watch mode",
			"Executes .NET Core build command",
			"Executes the build target",
			"Example to run an arbitrary external command",
			"Executes common maven commands"
		],
		"vs/workbench/parts/tasks/node/processRunnerSystem": [
			"No task is marked as a build task in the tasks.json. Mark a task with 'isBuildCommand'.",
			"No test task configured.",
			"The provided task configuration has validation errors. See tasks output log for details.",
			"No task to execute found.",
			"A unknown error has occurred while executing a task. See task output log for details.",
			"\nWatching build tasks has finished.",
			"Failed to launch external program {0} {1}.",
			"\nThe task '{0}' was terminated per user request."
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"Running gulp --tasks-simple didn't list any tasks. Did you run npm install?",
			"Running jake --tasks didn't list any tasks. Did you run npm install?",
			"Gulp is not installed on your system. Run npm install -g gulp to install it.",
			"Jake is not installed on your system. Run npm install -g jake to install it.",
			"Grunt is not installed on your system. Run npm install -g grunt to install it.",
			"Program {0} was not found. Message is {1}",
			"Build task named '{0}' detected.",
			"Test task named '{0}' detected."
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"{0}, tasks",
			"Type the name of a task to run",
			"No tasks matching",
			"No tasks found"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsTracker": [
			"User Snippet"
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"Update Now",
			"Later",
			"Release Notes",
			"Release Notes",
			"Show Release Notes",
			"Download Now",
			"Welcome to {0} v{1}! Would you like to read the Release Notes?",
			"Our license terms have changed, please go through them.",
			"Read License",
			"Insider builds and releases everyday!",
			"Read More",
			"Don't Show Again",
			"{0} will be updated after it restarts.",
			"There is an available update.",
			"There are no updates currently available."
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesInput": [
			"Release Notes: {0}"
		],
		"vs/workbench/api/node/mainThreadMessageService": [
			"Close"
		],
		"vs/editor/node/textMate/TMSnippets": [
			"Contributes snippets.",
			"Language identifier for which this snippet is contributed to.",
			"Path of the snippets file. The path is relative to the extension folder and typically starts with './snippets/'.",
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		],
		"vs/platform/jsonschemas/common/jsonValidationExtensionPoint": [
			"Contributes json schema configuration.",
			"The file pattern to match, for example \"package.json\" or \"*.launch\".",
			"A schema URL ('http:', 'https:') or relative path to the extension folder ('./').",
			"'configuration.jsonValidation' must be a array",
			"'configuration.jsonValidation.fileMatch' must be defined",
			"'configuration.jsonValidation.url' must be a URL or relative path",
			"'configuration.jsonValidation.url' is an invalid relative URL: {0}",
			"'configuration.jsonValidation.url' must start with 'http:', 'https:' or './' to reference schemas located in the extension"
		],
		"vs/editor/node/textMate/TMSyntax": [
			"Contributes textmate tokenizers.",
			"Language identifier for which this syntax is contributed to.",
			"Textmate scope name used by the tmLanguage file.",
			"Path of the tmLanguage file. The path is relative to the extension folder and typically starts with './syntaxes/'.",
			"A map of scope name to language id if this grammar contains embedded languages.",
			"List of language scope names to which this grammar is injected to.",
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected string in `contributes.{0}.scopeName`. Provided value: {1}",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}",
			"Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		],
		"vs/editor/node/languageConfiguration": [
			"Errors parsing {0}: {1}",
			"The opening bracket character or string sequence.",
			"The closing bracket character or string sequence.",
			"Defines the comment symbols",
			"Defines how block comments are marked.",
			"The character sequence that starts a block comment.",
			"The character sequence that ends a block comment.",
			"The character sequence that starts a line comment.",
			"Defines the bracket symbols that increase or decrease the indentation.",
			"Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.",
			"Defines a list of scopes where the auto pairs are disabled.",
			"Defines the bracket pairs that can be used to surround a selected string."
		],
		"vs/workbench/electron-browser/actions": [
			"Close Editor",
			"Close Window",
			"Switch Window",
			"Current Window",
			"Select a window",
			"Close Folder",
			"There is currently no folder opened in this instance to close.",
			"New Window",
			"Toggle Full Screen",
			"Toggle Menu Bar",
			"Toggle Developer Tools",
			"Zoom In",
			"Zoom Out",
			"Reset Zoom",
			"Startup Performance",
			"Reload Window",
			"Open Recent",
			"folders",
			"files",
			"Select a path (hold Cmd-key to open in new window)",
			"Select a path to open (hold Ctrl-key to open in new window)",
			"Close Notification Messages",
			"Report Issues",
			"{0} ⟷ {1}"
		],
		"vs/workbench/electron-browser/shell": [
			"It is recommended not to run Code as 'root'.",
			"The shared process terminated unexpectedly. Please reload the window to recover."
		],
		"vs/editor/common/model/textModelWithTokens": [
			"The mode has failed while tokenizing the input."
		],
		"vs/workbench/parts/git/node/git.lib": [
			"Can't open file from git",
			"File seems to be binary and cannot be opened as text"
		],
		"vs/base/node/zip": [
			"{0} not found inside zip."
		],
		"vs/platform/extensions/node/extensionValidator": [
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^0.10.0, ^1.2.3, ^0.11.0, ^0.10.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}.",
			"Got empty extension description",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"Extension version is not semver compatible."
		],
		"vs/base/common/json": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		],
		"vs/editor/common/config/defaultConfig": [
			"Editor content"
		],
		"vs/editor/contrib/find/common/findController": [
			"Find",
			"Find Next",
			"Find Previous",
			"Find Next Selection",
			"Find Previous Selection",
			"Replace",
			"Add Selection To Next Find Match",
			"Add Selection To Previous Find Match",
			"Move Last Selection To Next Find Match",
			"Move Last Selection To Previous Find Match",
			"Select All Occurences of Find Match",
			"Change All Occurrences"
		],
		"vs/editor/contrib/find/browser/findWidget": [
			"Find",
			"Find",
			"Previous match",
			"Next match",
			"Find in selection",
			"Close",
			"Replace",
			"Replace",
			"Replace",
			"Replace All",
			"Toggle Replace mode",
			"Only the first 999 results are highlighted, but all find operations work on the entire text.",
			"{0} of {1}",
			"No results"
		],
		"vs/editor/contrib/referenceSearch/browser/referencesController": [
			"Loading..."
		],
		"vs/editor/contrib/zoneWidget/browser/peekViewWidget": [
			"Close"
		],
		"vs/editor/contrib/hover/browser/modesContentHover": [
			"Loading..."
		],
		"vs/editor/contrib/parameterHints/browser/parameterHintsWidget": [
			"{0}, hint"
		],
		"vs/editor/common/services/bulkEdit": [
			"These files have changed in the meantime: {0}"
		],
		"vs/editor/contrib/rename/browser/renameInputField": [
			"Rename input. Type new name and press Enter to commit."
		],
		"vs/editor/contrib/rename/common/rename": [
			"No result."
		],
		"vs/editor/contrib/suggest/browser/suggestWidget": [
			"Read More...{0}",
			"{0}, suggestion, has details",
			"{0}, suggestion",
			"Go back",
			"Loading...",
			"No suggestions.",
			"{0}, accepted",
			"{0}, suggestion, has details",
			"{0}, suggestion"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"Collapse"
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"The file is dirty. Please save it first before reopening it with another encoding.",
			"Failed to save '{0}': {1}"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"More"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"{0} ({1})"
		],
		"vs/workbench/parts/files/browser/views/openEditorsViewer": [
			"{0}, Editor Group",
			"{0}, Open Editor",
			"Save All",
			"Close All",
			"Close",
			"Close Others",
			"Close All"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"Split Editor",
			"Navigate Between Editor Groups",
			"Focus Active Editor Group",
			"Focus First Editor Group",
			"Focus Second Editor Group",
			"Focus Third Editor Group",
			"Focus Previous Group",
			"Focus Next Group",
			"Open to the Side",
			"Close Editor",
			"Close Editors to the Left",
			"Close Editors to the Right",
			"Close All Editors",
			"Close Editors in Other Groups",
			"Close Other Editors",
			"Close All Editors in Group",
			"Move Editor Group Left",
			"Move Editor Group Right",
			"Minimize Other Editor Groups",
			"Even Editor Group Widths",
			"Maximize Editor Group and Hide Sidebar",
			"Keep Editor",
			"Open Next Editor",
			"Open Previous Editor",
			"Go Forward",
			"Go Back",
			"Reopen Closed Editor",
			"Show Editors in First Group",
			"Show Editors in Second Group",
			"Show Editors in Third Group",
			"Show Editors in Group",
			"Show All Editors",
			"Open Previous Recently Used Editor in Group",
			"Open Next Recently Used Editor in Group",
			"Open Previous Editor from History",
			"Clear Editor History",
			"Open Last Editor in Group",
			"Move Editor Left",
			"Move Editor Right",
			"Move Editor into Previous Group",
			"Move Editor into Next Group"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"Binary Viewer"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"{0} ↔ {1} (Replace Preview)"
		],
		"vs/workbench/parts/git/browser/gitServices": [
			"Can't open this git resource.",
			"{0} (index) ↔ {1}",
			"{0} - Changes on index",
			"{0} ← {1}",
			"{0} - Renamed - Changes on index",
			"{0} (HEAD) ↔ {1}",
			"{0} - Changes on working tree",
			"{0} (merge) ↔ {1}",
			"{0} - Merge changes",
			"You seem to have git {0} installed. Code works best with git >=2.0.0.",
			"Download",
			"Don't show again",
			"Please configure your git user name and e-mail.",
			"Git {0}",
			"You should first resolve the unmerged changes before committing your changes.",
			"Show Output",
			"Cancel",
			"There was an issue running a git operation. Please review the output or use a console to check the state of your repository.",
			"{0} (index)",
			"{0} - Changes on index",
			"{0} ({1})",
			"{0} - Changes on {1}",
			"Can't open this git resource."
		],
		"vs/workbench/parts/git/browser/gitWidgets": [
			"Publish Branch",
			"Synchronize Changes",
			"Git is not enabled in this workspace."
		],
		"vs/workbench/parts/git/browser/views/changes/changesViewer": [
			"Staged Changes",
			"Changes",
			"Merge Changes",
			"This file is located outside the current workspace.",
			"M",
			"M",
			"A",
			"D",
			"D",
			"R",
			"C",
			"U",
			"!",
			"D",
			"A",
			"D",
			"A",
			"D",
			"A",
			"M",
			"Modified in index",
			"Modified",
			"Added to index",
			"Deleted in index",
			"Deleted",
			"Renamed in index",
			"Copied in index",
			"Untracked",
			"Ignored",
			"Conflict: both deleted",
			"Conflict: added by us",
			"Conflict: deleted by them",
			"Conflict: added by them",
			"Conflict: deleted by us",
			"Conflict: both added",
			"Conflict: both modified",
			"File {0} in folder {1} has status: {2}, Git",
			"Staged Changes, Git",
			"Changes, Git",
			"Merge, Git"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"Unknown Source",
			"Please start a debug session to evaluate",
			"Unknown stack location",
			"Only primitive values are shown for this object."
		],
		"vs/workbench/parts/debug/electron-browser/debugViewer": [
			"Process",
			"Thread",
			"paused",
			"running",
			"Load More Stack Frames",
			"Thread {0}, callstack, debug",
			"Stack Frame {0} line {1} {2}, callstack, debug",
			"Type new variable value",
			"Scope {0}, variables, debug",
			"{0} value {1}, variables, debug",
			"Expression to watch",
			"Type watch expression",
			"{0} value {1}, watch, debug",
			"{0} value {1}, watch, debug",
			"Function to break on",
			"Type function breakpoint",
			"Function breakpoints are not supported by this debug type",
			"Breakpoint line {0} {1}, breakpoints, debug",
			"Function breakpoint {0}, breakpoints, debug",
			"Exception breakpoint {0}, breakpoints, debug"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"More Info",
			"No extension installed for '{0}' debugging.",
			"Unable to launch debug adapter from '{0}'.",
			"Debug adapter executable '{0}' not found.",
			"{0}. Stopping the debug adapter.",
			"Debug adapter process has terminated unexpectedly"
		],
		"vs/workbench/parts/debug/node/debugConfigurationManager": [
			"Contributes debug adapters.",
			"Unique identifier for this debug adapter.",
			"Display name for this debug adapter.",
			"Allow breakpoints for these languages.",
			"List of languages.",
			"Path to the debug adapter program. Path is either absolute or relative to the extension folder.",
			"Optional arguments to pass to the adapter.",
			"Optional runtime in case the program attribute is not an executable but requires a runtime.",
			"Optional runtime arguments.",
			"Mapping from interactive variables (e.g ${action.pickProcess}) in `launch.json` to a command.",
			"Configurations for generating the initial 'launch.json'.",
			"JSON schema configurations for validating 'launch.json'.",
			"Windows specific settings.",
			"Runtime used for Windows.",
			"OS X specific settings.",
			"Runtime used for OSX.",
			"Linux specific settings.",
			"Runtime used for Linux.",
			"Contributes breakpoints.",
			"Allow breakpoints for this language.",
			"Launch",
			"Version of this file format.",
			"List of configurations. Add new configurations or edit existing ones by using IntelliSense.",
			"Debug adapter 'type' can not be omitted and must be of type 'string'.",
			"Debug type '{0}' is already registered and has attribute '{1}', ignoring attribute '{1}'.",
			"Select Environment",
			"Unable to create 'launch.json' file inside the '.vscode' folder ({0})."
		],
		"vs/workbench/services/extensions/electron-browser/extensionHost": [
			"Extension host did not start in 10 seconds, it might be stopped on the first line and needs a debugger to continue.",
			"Extension host did not start in 10 seconds, that might be a problem.",
			"Error from the extension host: {0}",
			"Extension host terminated unexpectedly. Please reload the window to recover."
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"Debug Hover"
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"Copy Value",
			"Copy"
		],
		"vs/workbench/parts/debug/browser/breakpointWidget": [
			"Break when expression evaluates to true. 'Enter' to accept, 'esc' to cancel.",
			"The program will only stop here if this condition is true. Press Enter to accept or Escape to cancel.",
			"Break when hit count condition is met. 'Enter' to accept, 'esc' to cancel.",
			"The program will only stop here if the hit count is met. Press Enter to accept or Escape to cancel.",
			"Expression",
			"Hit Count"
		],
		"vs/workbench/parts/html/browser/webview": [
			"Developer: Webview Tools"
		],
		"vs/workbench/parts/extensions/electron-browser/dependenciesViewer": [
			"Error",
			"Unknown Dependency:"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsWidgets": [
			"Disabled",
			"Disabled (Workspace)",
			"Installed",
			"Enabled"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"Cannot copy terminal selection when terminal does not have focus",
			"The terminal process terminated with exit code: {0}"
		],
		"vs/workbench/browser/parts/activitybar/activityAction": [
			"{0} ({1})"
		],
		"vs/workbench/browser/parts/compositePart": [
			"{0} ({1})",
			"{0} actions"
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"Text Editor",
			"Text Diff Editor",
			"Binary Diff Editor",
			"Show Editors in First Group",
			"Show Editors in Second Group",
			"Show Editors in Third Group",
			"Show All Opened Editors",
			"View"
		],
		"vs/platform/keybinding/browser/keybindingServiceImpl": [
			"Here are other available commands: ",
			"({0}) was pressed. Waiting for second key of chord...",
			"The key combination ({0}, {1}) is not a command."
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"Quick picker. Type to narrow down results.",
			"Quick Picker"
		],
		"vs/workbench/services/files/node/fileService": [
			"Invalid file resource ({0})",
			"File seems to be binary and cannot be opened as text",
			"File not found ({0})",
			"File is directory ({0})",
			"Unable to move/copy. File would replace folder it is contained in.",
			"Folders cannot be copied into the workspace. Please select individual files to copy them.",
			"File is Read Only"
		],
		"vs/workbench/parts/tasks/node/processRunnerConfiguration": [
			"Error: no valid command name provided.",
			"Error: command arguments must be an array of strings. Provided value is:\n{0}",
			"Warning: global matchers and tasks can't be mixed. Ignoring global matchers.",
			"Warning: options.cwd must be of type string. Ignoring value {0}\n",
			"Error: Problem Matcher in declare scope must have a name:\n{0}\n",
			"Error: tasks must provide a taskName property. The task will be ignored.\n{0}\n",
			"Warning: the defined problem matcher is unknown. Supported types are string | ProblemMatcher | (string | ProblemMatcher)[].\n{0}\n",
			"Error: Invalid problemMatcher reference: {0}\n"
		],
		"vs/workbench/parts/feedback/browser/feedback": [
			"Tweet Feedback",
			"Tweet us your feedback.",
			"Your installation is corrupt.",
			"Please specify this if you submit a bug.",
			"How was your experience?",
			"Happy",
			"Sad",
			"Other ways to contact us",
			"Submit a bug",
			"Request a missing feature",
			"Tell us why?",
			"Comments",
			"Tweet",
			"character left",
			"characters left",
			"Sending",
			"Thanks",
			"Try again"
		],
		"vs/platform/extensions/common/abstractExtensionService": [
			"Extension `{1}` failed to activate. Reason: unknown dependency `{0}`.",
			"Extension `{1}` failed to activate. Reason: dependency `{0}` failed to activate.",
			"Extension `{0}` failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).",
			"Activating extension `{0}` failed: {1}."
		],
		"vs/editor/common/services/modeServiceImpl": [
			"Contributes language declarations.",
			"ID of the language.",
			"Name aliases for the language.",
			"File extensions associated to the language.",
			"File names associated to the language.",
			"File name glob patterns associated to the language.",
			"Mime types associated to the language.",
			"A regular expression matching the first line of a file of the language.",
			"A relative path to a file containing configuration options for the language.",
			"Empty value for `contributes.{0}`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"Invalid `contributes.{0}`. Expected an array."
		],
		"vs/workbench/electron-browser/integration": [
			"Undo",
			"Redo",
			"Cut",
			"Copy",
			"Paste",
			"Select All"
		],
		"vs/workbench/services/message/electron-browser/messageService": [
			"&&Yes",
			"Cancel"
		],
		"vs/editor/common/services/modelServiceImpl": [
			"[{0}] {1}",
			"Please update your settings: `editor.detectIndentation` replaces `editor.tabSize`: \"auto\" or `editor.insertSpaces`: \"auto\""
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"OK",
			"Don't show again",
			"More information",
			"Your {0} installation appears to be corrupt. Please reinstall."
		],
		"vs/workbench/electron-browser/crashReporter": [
			"Enable crash reports to be sent to Microsoft.\n\t// This option requires restart to take effect."
		],
		"vs/workbench/services/themes/electron-browser/themeService": [
			"Contributes textmate color themes.",
			"Label of the color theme as shown in the UI.",
			"Base theme defining the colors around the editor: 'vs' is the light color theme, 'vs-dark' is the dark color theme. 'hc-black' is the dark high contrast theme.",
			"Path of the tmTheme file. The path is relative to the extension folder and is typically './themes/themeFile.tmTheme'.",
			"Contributes file icon themes.",
			"Id of the icon theme as used in the user settings.",
			"Label of the icon theme as shown in the UI.",
			"Path of the icon theme definition file. The path is relative to the extension folder and is typically './icons/awesome-icon-theme.json'.",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected string in `contributes.{0}.id`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"Unable to load {0}",
			"Problems parsing file icons file: {0}",
			"Unable to load {0}",
			"Problems parsing JSON theme file: {0}",
			"Problems parsing plist file: {0}",
			"The folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for folder will be shown.",
			"The folder icon for collapsed folders, and if folderExpanded is not set, also for expanded folders.",
			"The default file icon, shown for all files that don't match any extension, filename or language id.",
			"Associates folder names to icons. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates folder names to icons for expanded folders. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file extensions to icons. The object key is is the file extension name. The extension name is the last segment of a file name after the last dot (not including the dot). Extensions are compared case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file names to icons. The object key is is the full file name, but not including any path segments. File name can include dots and a possible file extension. No patterns or wildcards are allowed. File name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates languages to icons. The object key is the language id as defined in the language contribution point.",
			"The ID of the icon definition for the association.",
			"Fonts that are used in the icon definitions.",
			"The ID of the font.",
			"The locations of the font.",
			"The font path, relative to the current icon theme file.",
			"The format of the font.",
			"The weight of the font.",
			"The style of the font.",
			"The default size of the font.",
			"Description of all icons that can be used when associating files to icons.",
			"An icon definition. The object key is the ID of the definition.",
			"When using a SVG or PNG: The path to the image. The path is relative to the icon set file.",
			"When using a glyph font: The character in the font to use.",
			"When using a glyph font: The color to use.",
			"When using a font: The font size in percentage to the text font. If not set, defaults to the size in the font definition.",
			"When using a font: The id of the font. If not set, defaults to the first font definition.",
			"Optional associations for file icons in light color themes.",
			"Optional associations for file icons in high contrast color themes."
		],
		"vs/workbench/services/extensions/electron-browser/extensions": [
			"No workspace.",
			"Overwriting extension {0} with {1}.",
			"Loading development extension at {0}",
			"Overwriting extension {0} with {1}."
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/editor/common/controller/cursor": [
			"Unexpected exception while executing command."
		],
		"vs/editor/contrib/referenceSearch/browser/referencesWidget": [
			"Failed to resolve file.",
			"{0} references",
			"{0} reference",
			"no preview available",
			"References",
			"No results",
			"References"
		],
		"vs/base/browser/ui/resourceviewer/resourceViewer": [
			"{0}x{1} {2}",
			"The file will not be displayed in the editor because it is either binary, very large or uses an unsupported text encoding.",
			"{0}B",
			"{0}KB",
			"{0}MB",
			"{0}GB",
			"{0}TB"
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debuggee"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"Type of configuration.",
			"Name of configuration; appears in the launch configuration drop down menu.",
			"Request type of configuration. Can be \"launch\" or \"attach\".",
			"Configurations that will be launched as part of this \"composite\" configuration. Only respected if type of this configuration is \"composite\".",
			"Task to run before debug session starts.",
			"Controls behavior of the internal debug console.",
			"Windows specific launch configuration attributes.",
			"OS X specific launch configuration attributes.",
			"Linux specific launch configuration attributes.",
			"Relative paths will no longer be automatically converted to absolute ones. Consider using ${workspaceRoot} as a prefix."
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"Tab actions"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"Close",
			"Close Others",
			"Close to the Right",
			"Close All",
			"Keep Open",
			"Show Opened Editors",
			"Editor actions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"Binary Diff Viewer",
			"Comparing binary files to non binary files is currently not supported",
			"{0} ↔ {1}"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"Move the active editor by tabs or groups",
			"Active editor move argument",
			"Argument Properties:\n\t\t\t\t\t\t* 'to': String value providing where to move.\n\t\t\t\t\t\t* 'by': String value providing the unit for move. By tab or by group.\n\t\t\t\t\t\t* 'value': Number value providing how many positions or an absolute position to move.\n\t\t\t\t\t",
			"Command **{0}** has been removed. You can use **{1}** instead",
			"Configure Keyboard Shortcuts"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"Ln {0}, Col {1} ({2} selected)",
			"Ln {0}, Col {1}",
			"{0} selections ({1} characters selected)",
			"{0} selections",
			"LF",
			"CRLF",
			"Tab moves focus",
			"Disable Accessibility Mode",
			"Go to Line",
			"Indentation",
			"Select Encoding",
			"Select End of Line Sequence",
			"Select Language Mode",
			"File Information",
			"Spaces: {0}",
			"Tab Size: {0}",
			"Search Marketplace Extensions for '{0}'...",
			"Change Language Mode",
			"No text editor active at this time",
			"({0}) - Configured Language",
			"({0})",
			"languages (identifier)",
			"Configure File Association for '{0}'...",
			"Auto Detect",
			"Select Language Mode",
			"Current Association",
			"Select Language Mode to Associate with '{0}'",
			"Change Indentation",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"change view",
			"convert file",
			"Select Action",
			"Change End of Line Sequence",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"Select End of Line Sequence",
			"Change File Encoding",
			"No text editor active at this time",
			"No file active at this time",
			"Save with Encoding",
			"Reopen with Encoding",
			"Save with Encoding",
			"Reopen with Encoding",
			"Select Action",
			"Select File Encoding to Reopen File",
			"Select File Encoding to Save with"
		],
		"vs/platform/markers/common/problemMatcher": [
			"Error: Invalid problemMatcher description. A matcher must at least define a pattern, owner and a file location. The problematic matcher is:\n{0}\n",
			"Info: unknown severity {0}. Valid values are error, warning and info.\n",
			"The loop property is only supported on the last line matcher.",
			"The loop property is only supported on multi line matchers.",
			"The problem pattern is missing a regular expression.",
			"The problem pattern is invalid. It must have at least a file, message and line or location match group.",
			"A problem matcher must define both a begin pattern and an end pattern for watching.",
			"Error: The string {0} is not a valid regular expression.\n"
		],
		"vs/workbench/node/extensionPoints": [
			"Failed to parse {0}: {1}.",
			"Cannot read file {0}: {1}.",
			"Failed to parse {0}: {1}.",
			"Cannot read file {0}: {1}.",
			"Couldn't find message for key {0}."
		],
		"vs/workbench/services/message/browser/messagelist/messageList": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}",
			"Error",
			"Warn",
			"Info",
			"Close"
		]
	},
	"bundles": {
		"vs/workbench/workbench.main": [
			"vs/base/browser/ui/actionbar/actionbar",
			"vs/base/browser/ui/aria/aria",
			"vs/base/browser/ui/findinput/findInput",
			"vs/base/browser/ui/inputbox/inputBox",
			"vs/base/browser/ui/resourceviewer/resourceViewer",
			"vs/base/browser/ui/toolbar/toolbar",
			"vs/base/common/errorMessage",
			"vs/base/common/json",
			"vs/base/common/keybinding",
			"vs/base/common/processes",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/base/parts/quickopen/browser/quickOpenModel",
			"vs/base/parts/quickopen/browser/quickOpenWidget",
			"vs/base/parts/tree/browser/treeDefaults",
			"vs/code/electron-main/windows",
			"vs/editor/common/config/commonEditorConfig",
			"vs/editor/common/config/defaultConfig",
			"vs/editor/common/controller/cursor",
			"vs/editor/common/model/textModelWithTokens",
			"vs/editor/common/modes/modesRegistry",
			"vs/editor/common/modes/snippetsRegistry",
			"vs/editor/common/services/bulkEdit",
			"vs/editor/common/services/modeServiceImpl",
			"vs/editor/common/services/modelServiceImpl",
			"vs/editor/contrib/accessibility/browser/accessibility",
			"vs/editor/contrib/carretOperations/common/carretOperations",
			"vs/editor/contrib/clipboard/browser/clipboard",
			"vs/editor/contrib/comment/common/comment",
			"vs/editor/contrib/contextmenu/browser/contextmenu",
			"vs/editor/contrib/defineKeybinding/browser/defineKeybinding",
			"vs/editor/contrib/find/browser/findWidget",
			"vs/editor/contrib/find/common/findController",
			"vs/editor/contrib/folding/browser/folding",
			"vs/editor/contrib/format/common/formatActions",
			"vs/editor/contrib/goToDeclaration/browser/goToDeclaration",
			"vs/editor/contrib/gotoError/browser/gotoError",
			"vs/editor/contrib/hover/browser/hover",
			"vs/editor/contrib/hover/browser/modesContentHover",
			"vs/editor/contrib/inPlaceReplace/common/inPlaceReplace",
			"vs/editor/contrib/indentation/common/indentation",
			"vs/editor/contrib/linesOperations/common/linesOperations",
			"vs/editor/contrib/links/browser/links",
			"vs/editor/contrib/multicursor/common/multicursor",
			"vs/editor/contrib/parameterHints/browser/parameterHints",
			"vs/editor/contrib/parameterHints/browser/parameterHintsWidget",
			"vs/editor/contrib/quickFix/browser/quickFix",
			"vs/editor/contrib/referenceSearch/browser/referenceSearch",
			"vs/editor/contrib/referenceSearch/browser/referencesController",
			"vs/editor/contrib/referenceSearch/browser/referencesWidget",
			"vs/editor/contrib/rename/browser/rename",
			"vs/editor/contrib/rename/browser/renameInputField",
			"vs/editor/contrib/rename/common/rename",
			"vs/editor/contrib/smartSelect/common/jumpToBracket",
			"vs/editor/contrib/smartSelect/common/smartSelect",
			"vs/editor/contrib/suggest/browser/suggestController",
			"vs/editor/contrib/suggest/browser/suggestWidget",
			"vs/editor/contrib/suggest/electron-browser/snippetCompletion",
			"vs/editor/contrib/toggleTabFocusMode/common/toggleTabFocusMode",
			"vs/editor/contrib/toggleWordWrap/common/toggleWordWrap",
			"vs/editor/contrib/zoneWidget/browser/peekViewWidget",
			"vs/editor/node/languageConfiguration",
			"vs/editor/node/textMate/TMSnippets",
			"vs/editor/node/textMate/TMSyntax",
			"vs/platform/actions/browser/menuItemActionItem",
			"vs/platform/actions/browser/menusExtensionPoint",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/environment/node/argv",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensions/common/abstractExtensionService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/integrity/node/integrityServiceImpl",
			"vs/platform/jsonschemas/common/jsonValidationExtensionPoint",
			"vs/platform/keybinding/browser/keybindingServiceImpl",
			"vs/platform/markers/common/problemMatcher",
			"vs/platform/message/common/message",
			"vs/platform/request/common/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/workbench/api/node/mainThreadMessageService",
			"vs/workbench/browser/actions/configureLocale",
			"vs/workbench/browser/actions/openSettings",
			"vs/workbench/browser/actions/toggleEditorLayout",
			"vs/workbench/browser/actions/toggleSidebarPosition",
			"vs/workbench/browser/actions/toggleSidebarVisibility",
			"vs/workbench/browser/actions/toggleStatusbarVisibility",
			"vs/workbench/browser/parts/activitybar/activityAction",
			"vs/workbench/browser/parts/activitybar/activitybarPart",
			"vs/workbench/browser/parts/compositePart",
			"vs/workbench/browser/parts/editor/binaryDiffEditor",
			"vs/workbench/browser/parts/editor/binaryEditor",
			"vs/workbench/browser/parts/editor/editor.contribution",
			"vs/workbench/browser/parts/editor/editorActions",
			"vs/workbench/browser/parts/editor/editorCommands",
			"vs/workbench/browser/parts/editor/editorPart",
			"vs/workbench/browser/parts/editor/editorPicker",
			"vs/workbench/browser/parts/editor/editorStatus",
			"vs/workbench/browser/parts/editor/stringEditor",
			"vs/workbench/browser/parts/editor/tabsTitleControl",
			"vs/workbench/browser/parts/editor/textDiffEditor",
			"vs/workbench/browser/parts/editor/titleControl",
			"vs/workbench/browser/parts/panel/panelPart",
			"vs/workbench/browser/parts/quickopen/quickOpenController",
			"vs/workbench/browser/parts/quickopen/quickopen.contribution",
			"vs/workbench/browser/parts/sidebar/sidebarPart",
			"vs/workbench/browser/parts/statusbar/statusbarPart",
			"vs/workbench/browser/quickopen",
			"vs/workbench/browser/viewlet",
			"vs/workbench/common/editor/diffEditorInput",
			"vs/workbench/electron-browser/actions",
			"vs/workbench/electron-browser/crashReporter",
			"vs/workbench/electron-browser/integration",
			"vs/workbench/electron-browser/main",
			"vs/workbench/electron-browser/main.contribution",
			"vs/workbench/electron-browser/shell",
			"vs/workbench/node/extensionPoints",
			"vs/workbench/parts/cli/electron-browser/cli.contribution",
			"vs/workbench/parts/debug/browser/breakpointWidget",
			"vs/workbench/parts/debug/browser/debugActionItems",
			"vs/workbench/parts/debug/browser/debugActions",
			"vs/workbench/parts/debug/browser/debugEditorModelManager",
			"vs/workbench/parts/debug/browser/debugViewlet",
			"vs/workbench/parts/debug/common/debugModel",
			"vs/workbench/parts/debug/electron-browser/debug.contribution",
			"vs/workbench/parts/debug/electron-browser/debugEditorContribution",
			"vs/workbench/parts/debug/electron-browser/debugHover",
			"vs/workbench/parts/debug/electron-browser/debugService",
			"vs/workbench/parts/debug/electron-browser/debugViewer",
			"vs/workbench/parts/debug/electron-browser/debugViews",
			"vs/workbench/parts/debug/electron-browser/electronDebugActions",
			"vs/workbench/parts/debug/electron-browser/rawDebugSession",
			"vs/workbench/parts/debug/electron-browser/repl",
			"vs/workbench/parts/debug/electron-browser/replViewer",
			"vs/workbench/parts/debug/electron-browser/terminalSupport",
			"vs/workbench/parts/debug/node/debugAdapter",
			"vs/workbench/parts/debug/node/debugConfigurationManager",
			"vs/workbench/parts/emmet/node/actions/balance",
			"vs/workbench/parts/emmet/node/actions/editPoints",
			"vs/workbench/parts/emmet/node/actions/evaluateMath",
			"vs/workbench/parts/emmet/node/actions/expandAbbreviation",
			"vs/workbench/parts/emmet/node/actions/incrementDecrement",
			"vs/workbench/parts/emmet/node/actions/matchingPair",
			"vs/workbench/parts/emmet/node/actions/mergeLines",
			"vs/workbench/parts/emmet/node/actions/reflectCssValue",
			"vs/workbench/parts/emmet/node/actions/removeTag",
			"vs/workbench/parts/emmet/node/actions/selectItem",
			"vs/workbench/parts/emmet/node/actions/splitJoinTag",
			"vs/workbench/parts/emmet/node/actions/toggleComment",
			"vs/workbench/parts/emmet/node/actions/updateImageSize",
			"vs/workbench/parts/emmet/node/actions/updateTag",
			"vs/workbench/parts/emmet/node/actions/wrapWithAbbreviation",
			"vs/workbench/parts/emmet/node/emmet.contribution",
			"vs/workbench/parts/execution/electron-browser/terminal.contribution",
			"vs/workbench/parts/execution/electron-browser/terminalService",
			"vs/workbench/parts/extensions/electron-browser/dependenciesViewer",
			"vs/workbench/parts/extensions/electron-browser/extensionEditor",
			"vs/workbench/parts/extensions/electron-browser/extensionTipsService",
			"vs/workbench/parts/extensions/electron-browser/extensions.contribution",
			"vs/workbench/parts/extensions/electron-browser/extensionsActions",
			"vs/workbench/parts/extensions/electron-browser/extensionsFileTemplate",
			"vs/workbench/parts/extensions/electron-browser/extensionsInput",
			"vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen",
			"vs/workbench/parts/extensions/electron-browser/extensionsViewlet",
			"vs/workbench/parts/extensions/electron-browser/extensionsWidgets",
			"vs/workbench/parts/extensions/electron-browser/extensionsWorkbenchService",
			"vs/workbench/parts/feedback/browser/feedback",
			"vs/workbench/parts/files/browser/editors/binaryFileEditor",
			"vs/workbench/parts/files/browser/editors/textFileEditor",
			"vs/workbench/parts/files/browser/fileActions",
			"vs/workbench/parts/files/browser/fileActions.contribution",
			"vs/workbench/parts/files/browser/files.contribution",
			"vs/workbench/parts/files/browser/saveErrorHandler",
			"vs/workbench/parts/files/browser/views/emptyView",
			"vs/workbench/parts/files/browser/views/explorerView",
			"vs/workbench/parts/files/browser/views/explorerViewer",
			"vs/workbench/parts/files/browser/views/openEditorsView",
			"vs/workbench/parts/files/browser/views/openEditorsViewer",
			"vs/workbench/parts/files/electron-browser/dirtyFilesTracker",
			"vs/workbench/parts/files/electron-browser/electronFileActions",
			"vs/workbench/parts/files/electron-browser/files.electron.contribution",
			"vs/workbench/parts/git/browser/gitActions",
			"vs/workbench/parts/git/browser/gitActions.contribution",
			"vs/workbench/parts/git/browser/gitQuickOpen",
			"vs/workbench/parts/git/browser/gitServices",
			"vs/workbench/parts/git/browser/gitWidgets",
			"vs/workbench/parts/git/browser/gitWorkbenchContributions",
			"vs/workbench/parts/git/browser/views/changes/changesView",
			"vs/workbench/parts/git/browser/views/changes/changesViewer",
			"vs/workbench/parts/git/browser/views/disabled/disabledView",
			"vs/workbench/parts/git/browser/views/empty/emptyView",
			"vs/workbench/parts/git/browser/views/gitless/gitlessView",
			"vs/workbench/parts/git/browser/views/huge/hugeView",
			"vs/workbench/parts/git/browser/views/notroot/notrootView",
			"vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView",
			"vs/workbench/parts/git/node/git.lib",
			"vs/workbench/parts/html/browser/html.contribution",
			"vs/workbench/parts/html/browser/htmlPreviewPart",
			"vs/workbench/parts/html/browser/webview",
			"vs/workbench/parts/markers/browser/markersWorkbenchContributions",
			"vs/workbench/parts/markers/common/messages",
			"vs/workbench/parts/markers/electron-browser/markersElectronContributions",
			"vs/workbench/parts/nps/electron-browser/nps.contribution",
			"vs/workbench/parts/output/browser/output.contribution",
			"vs/workbench/parts/output/browser/outputActions",
			"vs/workbench/parts/output/browser/outputEditorInput",
			"vs/workbench/parts/output/browser/outputPanel",
			"vs/workbench/parts/quickopen/browser/commandsHandler",
			"vs/workbench/parts/quickopen/browser/gotoLineHandler",
			"vs/workbench/parts/quickopen/browser/gotoSymbolHandler",
			"vs/workbench/parts/quickopen/browser/helpHandler",
			"vs/workbench/parts/quickopen/browser/quickopen.contribution",
			"vs/workbench/parts/search/browser/openAnythingHandler",
			"vs/workbench/parts/search/browser/openFileHandler",
			"vs/workbench/parts/search/browser/openSymbolHandler",
			"vs/workbench/parts/search/browser/patternInputWidget",
			"vs/workbench/parts/search/browser/replaceService",
			"vs/workbench/parts/search/browser/search.contribution",
			"vs/workbench/parts/search/browser/searchActions",
			"vs/workbench/parts/search/browser/searchResultsView",
			"vs/workbench/parts/search/browser/searchViewlet",
			"vs/workbench/parts/search/browser/searchWidget",
			"vs/workbench/parts/snippets/electron-browser/snippets.contribution",
			"vs/workbench/parts/snippets/electron-browser/snippetsTracker",
			"vs/workbench/parts/tasks/browser/taskQuickOpen",
			"vs/workbench/parts/tasks/common/taskTemplates",
			"vs/workbench/parts/tasks/electron-browser/task.contribution",
			"vs/workbench/parts/tasks/node/processRunnerConfiguration",
			"vs/workbench/parts/tasks/node/processRunnerDetector",
			"vs/workbench/parts/tasks/node/processRunnerSystem",
			"vs/workbench/parts/terminal/electron-browser/terminal.contribution",
			"vs/workbench/parts/terminal/electron-browser/terminalActions",
			"vs/workbench/parts/terminal/electron-browser/terminalInstance",
			"vs/workbench/parts/terminal/electron-browser/terminalPanel",
			"vs/workbench/parts/themes/electron-browser/themes.contribution",
			"vs/workbench/parts/update/electron-browser/releaseNotesInput",
			"vs/workbench/parts/update/electron-browser/update",
			"vs/workbench/parts/update/electron-browser/update.contribution",
			"vs/workbench/parts/watermark/browser/watermark",
			"vs/workbench/services/configuration/node/configurationEditingService",
			"vs/workbench/services/configurationResolver/node/configurationResolverService",
			"vs/workbench/services/extensions/electron-browser/extensionHost",
			"vs/workbench/services/extensions/electron-browser/extensions",
			"vs/workbench/services/files/electron-browser/fileService",
			"vs/workbench/services/files/node/fileService",
			"vs/workbench/services/history/browser/history",
			"vs/workbench/services/keybinding/electron-browser/keybindingService",
			"vs/workbench/services/message/browser/messagelist/messageList",
			"vs/workbench/services/message/electron-browser/messageService",
			"vs/workbench/services/textfile/common/textFileEditorModel",
			"vs/workbench/services/textfile/electron-browser/textFileService",
			"vs/workbench/services/themes/electron-browser/themeService"
		],
		"vs/workbench/parts/git/node/gitApp": [
			"vs/workbench/parts/git/node/git.lib"
		],
		"vs/workbench/services/search/node/searchApp": [
			"vs/base/common/errorMessage"
		],
		"vs/workbench/node/extensionHostProcess": [
			"vs/base/common/processes",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/platform/extensions/common/abstractExtensionService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/workbench/api/node/extHostDiagnostics",
			"vs/workbench/node/extensionHostMain"
		],
		"vs/code/electron-main/main": [
			"vs/base/common/json",
			"vs/base/common/keybinding",
			"vs/base/common/severity",
			"vs/code/electron-main/main",
			"vs/code/electron-main/menus",
			"vs/code/electron-main/windows",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/environment/node/argv",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/request/common/request",
			"vs/workbench/parts/git/electron-main/askpassService"
		],
		"vs/code/node/cli": [
			"vs/platform/environment/node/argv"
		],
		"vs/code/node/cliProcessMain": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/code/node/cliProcessMain",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/message/common/message",
			"vs/platform/request/common/request",
			"vs/platform/telemetry/common/telemetryService"
		],
		"vs/code/node/sharedProcessMain": [
			"vs/base/common/json",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/common/extensionsRegistry",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/message/common/message",
			"vs/platform/request/common/request",
			"vs/platform/telemetry/common/telemetryService"
		]
	}
}