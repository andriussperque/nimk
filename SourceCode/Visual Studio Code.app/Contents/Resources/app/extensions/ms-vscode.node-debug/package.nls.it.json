{
	"extension.description": "Estensione del debugger di Visual Studio Code per Node.js",
	"node.label": "Node.js",
	"node.sourceMaps.description": "Usa i mapping di origine JavaScript (se esistenti).",
	"node.outDir.description": "Se sono abilitati i mapping di origine, in questa directory è previsto il codice generato. Deprecato: usare l'attributo 'outFiles'.",
	"node.outFiles.description": "Se sono abilitati i mapping di origine, questi criteri GLOB specificano i file JavaScript generati. Se un criterio inizia con '!', i file sono esclusi. Se non è specificato, il codice generato dovrebbe trovarsi nella stessa directory dell'origine.",
	"node.stopOnEntry.description": "Arresta automaticamente il programma dopo l'avvio.",
	"node.port.description": "Porta di debug a cui connettersi. Il valore predefinito è 5858.",
	"node.address.description": "Indirizzo TCP/IP della porta di debug (solo per Node.js >= 5.0). Il valore predefinito è 'localhost'.",
	"node.timeout.description": "Numero di millisecondi in cui vengono effettuati i tentativi di connessione a Node.js. Il valore predefinito è 10000 ms.",
	"node.smartStep.description": "Esegue automaticamente un'istruzione alla volta del codice generato che non può essere mappato all'origine.",
	"node.launch.program.description": "Percorso assoluto del programma. Per ipotizzare il valore generato, esaminare package.json e i file aperti. Modificare questo attributo.",
	"node.launch.externalConsole.description": "Avvia la destinazione di debug nella console esterna.",
	"node.launch.externalConsole.error": "Deprecato: in sostituzione usare l'attributo 'console'.",
	"node.launch.console.description": "Indica dove avviare la destinazione di debug: console interna, terminale integrato o terminale esterno.",
	"node.launch.args.description": "Argomenti della riga di comando passati al programma.",
	"node.launch.cwd.description": "Percorso assoluto della directory di lavoro del programma di cui eseguire il debug.",
	"node.launch.runtimeExecutable.description": "Runtime da usare. Corrisponde a un percorso assoluto o al nome di un runtime disponibile in PATH. Se viene omesso, si presuppone che sia 'node'.",
	"node.launch.runtimeArgs.description": "Argomenti facoltativi passati all'eseguibile del runtime.",
	"node.launch.env.description": "Variabili di ambiente passate al programma.",
	"node.launch.config.name": "Launch",
	"node.attach.processId.description": "ID del processo a cui collegarsi.",
	"node.attach.restart.description": "Riavvia la sessione dopo la chiusura di Node.js.",
	"node.attach.localRoot.description": "Radice di origine locale che corrisponde a 'remoteRoot'.",
	"node.attach.remoteRoot.description": "Radice di origine dell'host remoto.",
	"node.attach.config.name": "Attach",
	"node.processattach.config.name": "Collega a processo",
	"extensionHost.label": "Sviluppo di estensioni per Visual Studio Code",
	"extensionHost.launch.runtimeExecutable.description": "Percorso assoluto di Visual Studio Code.",
	"extensionHost.launch.args.description": "Argomenti della riga di comando passati al programma.",
	"extensionHost.launch.stopOnEntry.description": "Arresta automaticamente l'host dell'estensione dopo l'avvio.",
	"extensionHost.launch.sourceMaps.description": "Usa i mapping di origine JavaScript.",
	"extensionHost.launch.outDir.description": "Se sono abilitati i mapping di origine, in questa directory è previsto il codice generato. Deprecato: usare l'attributo 'outFiles'.",
	"extensionHost.launch.outFiles.description": "Se sono abilitati i mapping di origine, questi criteri GLOB specificano i file JavaScript generati. Se un criterio inizia con '!', i file sono esclusi. Se non è specificato, il codice generato dovrebbe trovarsi nella stessa directory dell'origine.",
	"extensionHost.smartStep.description": "Esegue automaticamente un'istruzione alla volta del codice generato che non può essere mappato all'origine.",
	"extensionHost.launch.config.name": "Avvia estensione"
}